{"@t":"2025-08-16T05:45:17.5924560Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"22","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.6927900Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.6949180Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.7254760Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.7328140Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8887580Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8930630Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8931340Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8947100Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8948180Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8949170Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8949980Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8950300Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8951230Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8992150Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8994150Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.8994600Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:45:17.9438410Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 successfully announced in 43.1942 ms"],"State":"Server mac:3870:3dc5b8d1 successfully announced in 43.1942 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:45:17.9448050Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:3870:3dc5b8d1 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:45:17.9470810Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 all the dispatchers started"],"State":"Server mac:3870:3dc5b8d1 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:45:18.0579440Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"5","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T05:45:21.5964090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["40.6823"],"@tr":"8292793146f852dbe192d7829e27e2c3","@sp":"8cadc411b48e408c","RequestMethod":"GET","RequestPath":"/hangfire/recurring","StatusCode":200,"Elapsed":40.68225,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000001","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:45:21.6112910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.1086"],"@tr":"72434f7c2b86b2bc05980ed2c19da6ed","@sp":"b9887037f819197a","RequestMethod":"GET","RequestPath":"/hangfire/css-dark18200887361414","StatusCode":200,"Elapsed":5.108583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000005","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T05:45:21.6131920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.0084"],"@tr":"63a77bc07b3fc0b77b00ceb860034472","@sp":"7b5046bd06717439","RequestMethod":"GET","RequestPath":"/hangfire/css182001813065689","StatusCode":200,"Elapsed":7.008375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000003","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:45:21.6148430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.6811"],"@tr":"19b16bbafe01c52ff983f3334808105d","@sp":"6e04275edf6ad3f3","RequestMethod":"GET","RequestPath":"/hangfire/js182002113101031","StatusCode":200,"Elapsed":8.681083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000007","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:45:21.6336420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.5710"],"@tr":"ef7dda0440bbcc454204c72e690ccf24","@sp":"012baad859c763ff","RequestMethod":"GET","RequestPath":"/hangfire/fonts/glyphicons-halflings-regular/woff2","StatusCode":200,"Elapsed":0.570959,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000009","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":44}
{"@t":"2025-08-16T05:45:23.6662230Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["13.5705"],"@tr":"8d38738e1358c3a489bf1dd7d65acfd3","@sp":"86b74e7cb2ff311a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":13.570542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000000B","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:25.6850860Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.9802"],"@tr":"850919c65a8e91cb4feaf0b0f7d50a44","@sp":"8ccaf99ff2ade414","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.980167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000000D","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":44}
{"@t":"2025-08-16T05:45:27.6981780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.5100"],"@tr":"68ec08a321ec65c1566ad14c2a6afc12","@sp":"23da1fb8d9f7a08c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.509958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000000F","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:29.7114030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.6273"],"@tr":"ecd512fe8f321684fea5d82a8aaeaacc","@sp":"7750b0a9e05d33a9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.627333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000011","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:31.7267960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.7435"],"@tr":"28f0f2429787be878b9846e26b3917a9","@sp":"578f305ea2370fa1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.7435,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000013","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:33.7373190Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3102"],"@tr":"4069ef468674df87c7e8b0a207a9b0fc","@sp":"4f8dcad522664da4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.310167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000015","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:35.7521180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.4538"],"@tr":"8ae946c803c56aaf89b99d1de9924fea","@sp":"aa5d9903c74a8741","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.453792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000017","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:37.7654030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.6881"],"@tr":"6045050f010def4b4da3e95ed158a02e","@sp":"02dab631f6bb2c19","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.688083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000019","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:45:39.7830610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.4916"],"@tr":"f1e40de7e05194c115c82b09e7ae1c3b","@sp":"ac5d848de6cf5d2e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.491583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000001B","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:41.7978130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.3501"],"@tr":"a6c4c1a09a701dc4071ea846f162c57c","@sp":"0d453b0c53073f06","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.350084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000001D","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:43.8094930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.9406"],"@tr":"89d50a01f4f2ec73e0a00f79eeb4883b","@sp":"1ebee481c163c40d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.940584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000001F","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:45.8200110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.0234"],"@tr":"cc7772e81782c4d00dde29e28fcad40a","@sp":"71ad6192d35e7b84","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.023417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000021","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:47.8273940Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9626"],"@tr":"0d14889a233d7910805bcda4e40275b5","@sp":"dc82335025ae834c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.962625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000023","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:49.8392370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.6202"],"@tr":"5054b07938b9427aba701b739d92a086","@sp":"54853cf5b78749a5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.620208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000025","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:45:51.8504950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.6280"],"@tr":"bb83503184713378111c2d0f5b8c750f","@sp":"f87df04ebe6ee5a8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.628041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000027","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:53.8624980Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.9734"],"@tr":"350b67693d52842605cd8a68686a0289","@sp":"863b256c7dad6714","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.973375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000029","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:45:55.8750300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.3246"],"@tr":"c0eaffedb6c3ddf27bba1a8e2a9f16a7","@sp":"f470cb6794a6e035","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.324625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000002B","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:57.8871760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.9990"],"@tr":"81fcc88f36ce41f3b6aeeb61365a9042","@sp":"b8e92076ec91cba4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.999,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000002D","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:45:59.9024180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.5796"],"@tr":"8a033cc80e4e55fff9ddc7c31c561206","@sp":"379fd8b8696b13da","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.579625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000002F","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:46:01.9125450Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9505"],"@tr":"e1b889ca255d35538bcb937b265fa5b8","@sp":"7de719593ea0253c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.950458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000031","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:46:03.9229280Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0633"],"@tr":"a812ee1e1b423b0501c1fcb239860571","@sp":"dacad561bc285e79","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.06325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000033","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:46:05.9335290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9903"],"@tr":"0f5df57e4cee65d6f3acb12570f127d7","@sp":"84f41471b52a0f84","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.99025,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000035","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:46:07.9445380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0533"],"@tr":"764d3ad409987ea99969361c717cedae","@sp":"6f5c9e113bcb3cc6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.053334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000037","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:46:09.9534840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0193"],"@tr":"66ec81da517b9becb1986f4c888cd229","@sp":"61f6bcdbf6a1de6b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.019334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:00000039","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:46:11.9675130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.2643"],"@l":"Error","@x":"Npgsql.PostgresException (0x80004005): 57P01: terminating connection due to administrator command\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteReaderWithFlagsFallback(IDbCommand cmd, Boolean wasClosed, CommandBehavior behavior) in /_/Dapper/SqlMapper.cs:line 1066\n   at Dapper.SqlMapper.QueryMultipleImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 1033\n   at Dapper.SqlMapper.QueryMultiple(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 1009\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.<GetStatistics>b__24_0(IDbConnection connection)\n   at Hangfire.PostgreSql.PostgreSqlStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.UseConnection[T](Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.GetStatistics()\n   at Hangfire.Dashboard.RazorPage.<Assign>b__51_0() in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\RazorPage.cs:line 124\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\n   at System.Lazy`1.CreateValue()\n   at Hangfire.Dashboard.DashboardMetrics.<>c.<.cctor>b__1_0(RazorPage page) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\DashboardMetrics.cs:line 67\n   at Hangfire.Dashboard.JsonStats.Dispatch(DashboardContext context) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\JsonStats.cs:line 38\n   at Hangfire.Dashboard.AspNetCoreDashboardMiddleware.Invoke(HttpContext httpContext) in C:\\projects\\hangfire-525\\src\\Hangfire.AspNetCore\\Dashboard\\AspNetCoreDashboardMiddleware.cs:line 99\n   at Microsoft.AspNetCore.Builder.Extensions.UsePathBaseMiddleware.InvokeCore(HttpContext context, PathString matchedPath, PathString remainingPath)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n  Exception data:\n    Severity: FATAL\n    SqlState: 57P01\n    MessageText: terminating connection due to administrator command\n    File: postgres.c\n    Line: 3317\n    Routine: ProcessInterrupts","@tr":"d23eef534bd9046a402cf2f498efd005","@sp":"281b8207c4e6dc8a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":500,"Elapsed":6.264291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH0BEPPL4:0000003B","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:46:11.9846510Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"Npgsql.PostgresException (0x80004005): 57P01: terminating connection due to administrator command\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteReaderWithFlagsFallback(IDbCommand cmd, Boolean wasClosed, CommandBehavior behavior) in /_/Dapper/SqlMapper.cs:line 1066\n   at Dapper.SqlMapper.QueryMultipleImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 1033\n   at Dapper.SqlMapper.QueryMultiple(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 1009\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.<GetStatistics>b__24_0(IDbConnection connection)\n   at Hangfire.PostgreSql.PostgreSqlStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.UseConnection[T](Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlMonitoringApi.GetStatistics()\n   at Hangfire.Dashboard.RazorPage.<Assign>b__51_0() in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\RazorPage.cs:line 124\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\n   at System.Lazy`1.CreateValue()\n   at Hangfire.Dashboard.DashboardMetrics.<>c.<.cctor>b__1_0(RazorPage page) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\DashboardMetrics.cs:line 67\n   at Hangfire.Dashboard.JsonStats.Dispatch(DashboardContext context) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Dashboard\\JsonStats.cs:line 38\n   at Hangfire.Dashboard.AspNetCoreDashboardMiddleware.Invoke(HttpContext httpContext) in C:\\projects\\hangfire-525\\src\\Hangfire.AspNetCore\\Dashboard\\AspNetCoreDashboardMiddleware.cs:line 99\n   at Microsoft.AspNetCore.Builder.Extensions.UsePathBaseMiddleware.InvokeCore(HttpContext context, PathString matchedPath, PathString remainingPath)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28\n  Exception data:\n    Severity: FATAL\n    SqlState: 57P01\n    MessageText: terminating connection due to administrator command\n    File: postgres.c\n    Line: 3317\n    Routine: ProcessInterrupts","@tr":"d23eef534bd9046a402cf2f498efd005","@sp":"281b8207c4e6dc8a","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESH0BEPPL4:0000003B","RequestPath":"/hangfire/stats","ConnectionId":"0HNESH0BEPPL4","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:46:17.9662590Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 encountered an exception while sending heartbeat"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.server\" does not exist\n\nPOSITION: 17\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlConnection.<>c__DisplayClass21_0.<Heartbeat>b__0(DbConnection connection)\n   at Hangfire.PostgreSql.PostgreSqlStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlConnection.Heartbeat(String serverId)\n   at Hangfire.Server.ServerHeartbeatProcess.Execute(BackgroundProcessContext context) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Server\\ServerHeartbeatProcess.cs:line 50\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.server\" does not exist\n    Position: 17\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"Server mac:3870:3dc5b8d1 encountered an exception while sending heartbeat","SourceContext":"Hangfire.Server.ServerHeartbeatProcess","MachineName":"Mac","ThreadId":16}
{"@t":"2025-08-16T05:46:17.9838080Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:17.9873210Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:18.0175630Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:18.0191570Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:18.9914190Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:18.9955750Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:19.0221240Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:19.0247440Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:20.0006410Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:20.0047400Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:20.0277870Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:20.0300920Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:21.0092480Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:21.0135330Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:21.0331290Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:21.0352920Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:22.0186410Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:22.0230910Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:22.0382790Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:22.0407820Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:23.0272130Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:23.0311580Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:23.0440070Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:23.0472690Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:24.0355220Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:24.0394030Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:24.0512740Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:24.0544780Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:25.0430130Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:25.0468360Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:25.0585170Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:25.0617880Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:26.0507570Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:26.0529220Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:26.0656070Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:26.0680030Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:27.0562780Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:27.0590190Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:27.0704880Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:27.0722280Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery()\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 581\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:28.0628030Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:28.0655460Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:28.0753040Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:28.0776560Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:29.0693560Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:29.0728800Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:29.0807080Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:29.0833560Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:30.0770280Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:30.0811750Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:30.0866280Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:30.0891520Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:31.0853850Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:31.0888210Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:31.0913620Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:31.0939510Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:32.0926330Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:32.0959400Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:32.0968250Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:32.0995480Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:33.0998390Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:33.1027700Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:33.1029550Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:33.1048240Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:34.0083950Z","@mt":"{State:l}","@r":["Execution Worker is in the Failed state now due to an exception, execution will be retried in no more than 00:05:00"],"@l":"Error","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.jobqueue\" does not exist\n\nPOSITION: 17\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteReaderWithFlagsFallback(IDbCommand cmd, Boolean wasClosed, CommandBehavior behavior) in /_/Dapper/SqlMapper.cs:line 1066\n   at Dapper.SqlMapper.QueryImpl[T](IDbConnection cnn, CommandDefinition command, Type effectiveType)+MoveNext() in /_/Dapper/SqlMapper.cs:line 1094\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\n   at Hangfire.PostgreSql.PostgreSqlJobQueue.<>c__DisplayClass13_0.<Dequeue_Transaction>b__0()\n   at Hangfire.PostgreSql.Utils.Utils.TryExecute[T](Func`1 func, T& result, Func`2 swallowException, Nullable`1 tryCount)\n   at Hangfire.PostgreSql.PostgreSqlJobQueue.Dequeue_Transaction(String[] queues, CancellationToken cancellationToken)\n   at Hangfire.PostgreSql.PostgreSqlJobQueue.Dequeue(String[] queues, CancellationToken cancellationToken)\n   at Hangfire.PostgreSql.PostgreSqlConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)\n   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Server\\Worker.cs:line 107\n   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Server\\BackgroundProcessDispatcherBuilder.cs:line 82\n   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Processing\\BackgroundExecution.cs:line 118\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.jobqueue\" does not exist\n    Position: 17\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"Execution Worker is in the Failed state now due to an exception, execution will be retried in no more than 00:05:00","SourceContext":"Hangfire.Processing.BackgroundExecution","MachineName":"Mac","ThreadId":24}
{"@t":"2025-08-16T05:46:34.1071190Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:34.1081860Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:34.1105000Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:34.1110260Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:35.1134090Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:35.1145670Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:35.1147460Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:35.1203630Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:36.1226230Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:36.1232080Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:36.1250120Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:36.1256440Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:36.8143110Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 caught stopping signal..."],"State":"Server mac:3870:3dc5b8d1 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:46:36.8161070Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:46:37.1279150Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:37.1280590Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:37.1291200Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:37.1295690Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:37.3265800Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 caught stopped signal..."],"State":"Server mac:3870:3dc5b8d1 caught stopped signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:46:38.1323460Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:38.1323470Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:38.1358060Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:38.1364720Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:39.1391370Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:39.1399610Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:39.1427930Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:39.1430620Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:40.1467320Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:40.1467730Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:40.1509090Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:40.1516120Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:41.1541470Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:41.1555690Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:41.1559380Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:41.1568600Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:42.1587510Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:42.1591110Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:42.1601710Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:42.1604530Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:43.1629640Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:43.1629770Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:43.1662020Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:43.1665900Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:44.1692760Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:44.1699330Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:44.1726770Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:44.1733220Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:45.1763680Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:45.1763680Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:45.1798510Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:45.1804770Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:46.1831510Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:46.1831510Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:46.1843190Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:46.1845790Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:47.1876670Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:47.1876680Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:47.1917220Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:47.1923790Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:47.9727570Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 encountered an exception while sending heartbeat"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.server\" does not exist\n\nPOSITION: 17\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlConnection.<>c__DisplayClass21_0.<Heartbeat>b__0(DbConnection connection)\n   at Hangfire.PostgreSql.PostgreSqlStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlConnection.Heartbeat(String serverId)\n   at Hangfire.Server.ServerHeartbeatProcess.Execute(BackgroundProcessContext context) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Server\\ServerHeartbeatProcess.cs:line 50\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.server\" does not exist\n    Position: 17\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"Server mac:3870:3dc5b8d1 encountered an exception while sending heartbeat","SourceContext":"Hangfire.Server.ServerHeartbeatProcess","MachineName":"Mac","ThreadId":16}
{"@t":"2025-08-16T05:46:48.1955460Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:48.1958150Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:48.1988290Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:48.1995310Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:49.2025200Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:49.2027480Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:49.2060740Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:49.2066830Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:50.2088350Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:50.2103200Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:50.2112630Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:50.2123970Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:51.2141170Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:51.2149020Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to remove lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.TryRemoveLock(String resource, IDbConnection connection, PostgreSqlStorageOptions options, Boolean onlyExpired)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to remove lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:51.2152670Z","@mt":"{State:l}","@r":["hangfire:locks:schedulepoller: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:locks:schedulepoller: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":41}
{"@t":"2025-08-16T05:46:51.2159280Z","@mt":"{State:l}","@r":["hangfire:recurring-jobs:lock: Failed to acquire lock"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.lock\" does not exist\n\nPOSITION: 30\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.TransactionLockHandler.TryLock(IDbConnection connection, String schemaName, String resource)\n   at Hangfire.PostgreSql.PostgreSqlDistributedLock.LockHandler.Lock(String resource, TimeSpan timeout, IDbConnection connection, PostgreSqlStorageOptions options)\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.lock\" does not exist\n    Position: 30\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"hangfire:recurring-jobs:lock: Failed to acquire lock","SourceContext":"Hangfire.PostgreSql.PostgreSqlDistributedLock","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T05:46:51.8268200Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 caught shutdown signal..."],"@l":"Warning","State":"Server mac:3870:3dc5b8d1 caught shutdown signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:46:51.8277760Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 stopped non-gracefully due to DelayedJobScheduler, RecurringJobScheduler. Outstanding work on those dispatchers could be aborted, and there can be delays in background processing. This server instance will be incorrectly shown as active for a while. To avoid non-graceful shutdowns, investigate what prevents from stopping gracefully and add CancellationToken support for those methods."],"@l":"Warning","State":"Server mac:3870:3dc5b8d1 stopped non-gracefully due to DelayedJobScheduler, RecurringJobScheduler. Outstanding work on those dispatchers could be aborted, and there can be delays in background processing. This server instance will be incorrectly shown as active for a while. To avoid non-graceful shutdowns, investigate what prevents from stopping gracefully and add CancellationToken support for those methods.","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:46:51.8317060Z","@mt":"{State:l}","@r":["Server mac:3870:3dc5b8d1 there was an exception, server may not be removed"],"@l":"Warning","@x":"Npgsql.PostgresException (0x80004005): 42P01: relation \"hangfire.server\" does not exist\n\nPOSITION: 13\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)\n   at Dapper.SqlMapper.ExecuteCommand(IDbConnection cnn, CommandDefinition& command, Action`2 paramReader) in /_/Dapper/SqlMapper.cs:line 2848\n   at Dapper.SqlMapper.ExecuteImpl(IDbConnection cnn, CommandDefinition& command) in /_/Dapper/SqlMapper.cs:line 579\n   at Dapper.SqlMapper.Execute(IDbConnection cnn, String sql, Object param, IDbTransaction transaction, Nullable`1 commandTimeout, Nullable`1 commandType) in /_/Dapper/SqlMapper.cs:line 452\n   at Hangfire.PostgreSql.PostgreSqlConnection.<>c__DisplayClass20_0.<RemoveServer>b__0(DbConnection connection)\n   at Hangfire.PostgreSql.PostgreSqlStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)\n   at Hangfire.PostgreSql.PostgreSqlConnection.RemoveServer(String serverId)\n   at Hangfire.Server.BackgroundServerProcess.ServerDelete(BackgroundServerContext context, Stopwatch stoppedAt) in C:\\projects\\hangfire-525\\src\\Hangfire.Core\\Server\\BackgroundServerProcess.cs:line 229\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"hangfire.server\" does not exist\n    Position: 13\n    File: parse_relation.c\n    Line: 1431\n    Routine: parserOpenTable","State":"Server mac:3870:3dc5b8d1 there was an exception, server may not be removed","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:47:59.8349350Z","@mt":"Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@l":"Error","elapsed":"8","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT \"MigrationId\", \"ProductVersion\"\nFROM \"__EFMigrationsHistory\"\nORDER BY \"MigrationId\";","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":1}
{"@t":"2025-08-16T05:48:14.1769640Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"16","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T05:48:14.2729020Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T05:48:14.2750370Z","@mt":"No users found in the database. Seeding default Admin user...","SourceContext":"Program","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T05:48:14.3194810Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"4","parameters":"@p0='?', @p1='?', @p2='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Users\" (\"PasswordHash\", \"Role\", \"Username\")\nVALUES (@p0, @p1, @p2)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.3253850Z","@mt":"Default Admin user seeded successfully.","SourceContext":"Program","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.3488490Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.4648980Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6137460Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6181230Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6181910Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6194160Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6195070Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6195920Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6196290Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6196570Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6197070Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6220070Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6220590Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6220910Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T05:48:14.6280800Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e successfully announced in 4.7901 ms"],"State":"Server mac:4286:85c7081e successfully announced in 4.7901 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:48:14.6288630Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:4286:85c7081e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:48:14.6321310Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e all the dispatchers started"],"State":"Server mac:4286:85c7081e all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:48:48.2220550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["39.0224"],"@tr":"4863a798ff177041571f66f3214ad788","@sp":"2c8aa392cb1ed47d","RequestMethod":"GET","RequestPath":"/hangfire/recurring","StatusCode":200,"Elapsed":39.022416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000001","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:48:48.2340420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.3824"],"@tr":"80bda2c8d65e610454b996743921ab2a","@sp":"ca0ad18368e21a56","RequestMethod":"GET","RequestPath":"/hangfire/css-dark182001340309948","StatusCode":200,"Elapsed":4.382416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000005","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:48:48.2343030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.6827"],"@tr":"00d7107eb52bacd4afa4ae6203c20b1a","@sp":"6fcf34f75dd6f7fb","RequestMethod":"GET","RequestPath":"/hangfire/css182001775907575","StatusCode":200,"Elapsed":4.682708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000003","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":46}
{"@t":"2025-08-16T05:48:48.2349910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.3690"],"@tr":"76e03bce24397fad4cbf6cc49b2fafad","@sp":"d794cef232bb2ea7","RequestMethod":"GET","RequestPath":"/hangfire/js182002107812041","StatusCode":200,"Elapsed":5.368958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000007","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T05:48:48.2515840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.4717"],"@tr":"799923719af990c438d06b4649ffd70a","@sp":"ba88834c8d164856","RequestMethod":"GET","RequestPath":"/hangfire/fonts/glyphicons-halflings-regular/woff2","StatusCode":200,"Elapsed":0.471667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000009","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:48:50.7767590Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["24.5089"],"@tr":"ee9851eb06a49914169a3ce1bbf09d41","@sp":"949035f15eee4f90","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":24.508917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000000B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:48:53.7626340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.9030"],"@tr":"31ebf71d7ba138fd901638fd9856962c","@sp":"a37fe62b5f97457c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.902958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000000D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:48:56.7597730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.4734"],"@tr":"ed7a99e7ec995ccbabbbc1ada8a73214","@sp":"167675c10b1ddf21","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.473417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000000F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:48:59.7565320Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4257"],"@tr":"6e76878b9ece18c98ed9ad7b60b43b80","@sp":"1f32baa637d5e4a7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.425666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000011","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:02.7574210Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.5567"],"@tr":"003b2a94e76864d5ae2d3233e3a58ad7","@sp":"f99df1e74f77f461","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.556667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000013","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:49:05.7591870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.2613"],"@tr":"ffb9d97189ffa2de031d36045fe7ef77","@sp":"fd48458eebca3493","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.26125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000015","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:08.7549720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.9915"],"@tr":"e22235ddf2fbda3a15f48093f88fa817","@sp":"c8fa4ee2904c728b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.9915,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000017","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:49:11.7569370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.3309"],"@tr":"c3548d136a4318b91b8d316fe47911f5","@sp":"a1ec500a4486b1c6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.330875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000019","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T05:49:14.7533090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2985"],"@tr":"dc22438369c83c9c1aded4bd81b48008","@sp":"d008859433f81875","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.2985,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000001B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:17.7582180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.7623"],"@tr":"c0dfdb7d43d48d5c89c63cba15daf402","@sp":"b8a077c2fab75c4b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.762291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000001D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:20.7558910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.4720"],"@tr":"4713cea445a02bb1ca074ecb43821027","@sp":"1218ca034c60b0c0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.472041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000001F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:49:23.7596110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.9818"],"@tr":"7fc8bd2239c08bb1b6f105ecfeccf070","@sp":"1cb3c5b0e54459d7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.98175,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000021","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:49:26.7562900Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.6918"],"@tr":"f29efbcbfd8e820a4bac3689ae77911b","@sp":"1f2772d8f4580ba0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.691792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000023","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:29.7512110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5772"],"@tr":"dc0defa6ada7547bc0209829a72965c2","@sp":"aa9d8428e9871920","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.577209,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000025","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:49:32.7519830Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7776"],"@tr":"dc62635dc213e2a37f1fe33f0f997a9b","@sp":"a9c733702ccf0544","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.777583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000027","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:49:35.7513870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6723"],"@tr":"570f4df03ff89bb0900e6c8f4461c992","@sp":"3007861e57e27507","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.672292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000029","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:38.7503970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8570"],"@tr":"0fb45bd8715a3cc4ecd6b465e8610cc5","@sp":"34be4d1595495cec","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.857,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000002B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:41.7529780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.7937"],"@tr":"27746aa23fa3ee635fa81126a6f1d0fb","@sp":"1d1b7cfefa8c5207","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.793667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000002D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:44.7509190Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8329"],"@tr":"7a4a9e4c86db8d80559e25d663fa010f","@sp":"62a63bcca917c1d4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.832875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000002F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:47.7511540Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.4938"],"@tr":"d6c83af16dc444186d3526d6dc9a36bf","@sp":"285236a832186091","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.493791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000031","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:50.7530970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1890"],"@tr":"98267b96e19338549507dcab345ad01b","@sp":"9858a620ea71cad9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.189,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000033","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:49:53.7528860Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3202"],"@tr":"647787ff3de29c6f8f416d3f56342b82","@sp":"95be36f41cc7fb60","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.320167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000035","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:56.7533020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4676"],"@tr":"916f24a6cf4ed15ef6ce1eaf64341e5f","@sp":"719df0a72b38bfda","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.467625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000037","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:49:59.7510580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6854"],"@tr":"6762b8d91868d5d79ecad4cc627dd526","@sp":"bf9ab7ed97eb784a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.685375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000039","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:50:02.7641890Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["15.7890"],"@tr":"de4dd58e1035ea2bea1f103273ee284c","@sp":"ba12d5efaf7639c7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":15.788958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000003B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:05.7567880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1225"],"@tr":"1154e765037b4bb9da73b8970fab4218","@sp":"5c45b30c908626cd","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.122459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000003D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:08.7521420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0677"],"@tr":"63a9efa41ba6d320455af3d4e13c37c9","@sp":"4ab0649aacf73100","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.067709,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000003F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:11.7527180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7237"],"@tr":"7fbbf6a438f01e9ec4eb708bdbc52bcc","@sp":"c0d8916393c17cec","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.723708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000041","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:14.7523530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6596"],"@tr":"8b6f37d5dd705edcff8adfb2b1027f9f","@sp":"efcaac1f044610d8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.659625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000043","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:50:17.7511220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7460"],"@tr":"32361ef9ab1e002a5696e06bba65e090","@sp":"9ff4bd0f478f26f1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.746,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000045","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T05:50:20.7551340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1866"],"@tr":"bc99a84adf031c525955a29bfb8df0da","@sp":"a5b561f78522a39d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.186625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000047","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:50:23.7545530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5446"],"@tr":"8358d365d1c5730d629c13eba14bd92a","@sp":"bff0de903d2e104c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.544625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000049","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:26.7555810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0578"],"@tr":"f6b3705c6ba31ad1ef8c3cd36ad6c395","@sp":"950225e49ee5a695","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.057834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000004B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:29.7538420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2409"],"@tr":"99f976d6e01323f8a37ed5561014e695","@sp":"b92e4ef8f7d939b2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.240916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000004D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:32.7543170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5325"],"@tr":"a5e88846e4501154262c9ee91ad710cc","@sp":"ac844a32f80a9b52","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.5325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000004F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:35.7519490Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3770"],"@tr":"74b555ff9d266c23537172f726241f59","@sp":"671fe2ad8ae24536","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.377,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000051","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:50:38.7549270Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6213"],"@tr":"5906abdb31da0e27733aac0bd9f4fdc0","@sp":"703c8f7750365838","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.621333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000053","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:41.7540600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3420"],"@tr":"5d07226743d496e8690ddd4ad47ef73c","@sp":"37c8175d742ac241","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.342042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000063","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:44.7537680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3217"],"@tr":"015312820666e8cfc6b0ee4a5ff8bfdc","@sp":"9abe8ec3f261829c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.321667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000065","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:47.7544940Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9473"],"@tr":"860bbaf8d26154fb57a4c5735c733967","@sp":"4e88029dbca643e7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.947333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000067","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:50:50.5960940Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"df4ce0ee1cb7373860362f4d6227b5ab","@sp":"7aaf94949333cd28","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2dcd45b2-7daa-4bf7-918b-29abe84d8287","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH2918VKC:00000069","RequestPath":"/api/Auth/login","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:50.5986280Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["70.4466"],"@tr":"df4ce0ee1cb7373860362f4d6227b5ab","@sp":"7aaf94949333cd28","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":401,"Elapsed":70.446583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"2dcd45b2-7daa-4bf7-918b-29abe84d8287","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH2918VKC:00000069","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:50.7530090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6809"],"@tr":"a73998261e2c9712f5a719c782df1be4","@sp":"ca5c922367845d6c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.680917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000006B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:50:53.7569170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8982"],"@tr":"d2a9a33a72c01d1567ddca9eb12d3e8d","@sp":"aff5b971553d6dd6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.898166,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000006D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:50:56.7564140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8869"],"@tr":"00acc39ff83f020ef8f9713c510ef1ad","@sp":"0d972d4d9efc53a4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.886875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000006F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:50:58.5550660Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2fd6475fc75c9dddb7d464a0968f98b1","@sp":"44701fd160427373","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2dcd45b2-7daa-4bf7-918b-29abe84d8287","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH2918VKC:00000071","RequestPath":"/api/Auth/login","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:50:58.5759040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["60.4824"],"@tr":"2fd6475fc75c9dddb7d464a0968f98b1","@sp":"44701fd160427373","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":60.482375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"2dcd45b2-7daa-4bf7-918b-29abe84d8287","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH2918VKC:00000071","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:50:59.7565650Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2686"],"@tr":"a196a70b8caac538e1ad9a6be5d71363","@sp":"46228aee692de9ee","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.268584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000073","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:02.7547240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9523"],"@tr":"4bc3d44af40218505993ea2a384d8c71","@sp":"5feadc21f36d3751","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.952334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000075","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:05.7545640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7668"],"@tr":"86f4a0f7e2fbbdc271da3e8ce6e44b60","@sp":"7d978fb6785c1da1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.76675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000077","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:08.7540460Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9108"],"@tr":"c1290e2bb08cc4b8e04a780ce93dbf2f","@sp":"ec6ed5698566d449","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.910792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000079","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:11.7571600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1256"],"@tr":"e674c6b21b28841b2904d8b4a89662a3","@sp":"4b2d90302757d79c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.125625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000007B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:14.7533080Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0675"],"@tr":"55c61bf864957af96fe43a309c42b1c0","@sp":"35f5e3a8fd0916bc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.067542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000007D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:17.7555810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4858"],"@tr":"44be741666c8fafa7826ad7eb1e8a28b","@sp":"8593cca15bfb4099","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.48575,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000007F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:51:20.7563130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8593"],"@tr":"58886bb79f05785b8731c62d315a7579","@sp":"9da660301ff5366c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.859334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000081","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:23.7561930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9710"],"@tr":"3728c45fd660fbfd85c4080de1fa863f","@sp":"38166e344795c0da","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.971042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000083","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:26.7526480Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7250"],"@tr":"262b3135c5a14c25e54331a353fcb68f","@sp":"d3e87068149ac39d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.725,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000085","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:29.7574550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1180"],"@tr":"ed6b226e67ad5d2402a06e912dcfff65","@sp":"c5b3ff724b4775c5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.117958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000087","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:32.7517510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3572"],"@tr":"d9cf566563bf8f77f787f2817d1659dc","@sp":"14d244bf20758561","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.357209,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000089","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:51:35.7561460Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9040"],"@tr":"3eb70e6fdfdf8faa199be6a8dab958de","@sp":"f5a9957450423879","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.903958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000008B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:38.7542140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9763"],"@tr":"ff87024b4215281dfae6d9223312027b","@sp":"bb13f2eb23913c67","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.976292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000008D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:41.7558640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8546"],"@tr":"f66d9200d7cd74046e47d6cfe8580acf","@sp":"e207fb6b54df5fb9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.854583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000008F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:51:44.7584510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.8274"],"@tr":"a97bb31dca14fb43fd5a3d123f5bf520","@sp":"7a2d3910bb489604","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.827375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000091","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:51:47.7526300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.1447"],"@tr":"4175c2e847fa8e404dd8590e28895dcc","@sp":"0868e8c7ab604161","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.144708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000093","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:51:50.7557510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9086"],"@tr":"9660125707e8dac48f1269027fe20f42","@sp":"6f1dda718dbdebc5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.908583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000095","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:51:53.7566140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0668"],"@tr":"446718791e6eb8f84f2ba4b3583fb39a","@sp":"6c7defec9b9a07ab","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.066791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000097","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:56.7560020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8195"],"@tr":"871fe59df272245cf99765fc71ebc126","@sp":"47c5cb7e5d776edf","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.8195,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:00000099","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:51:59.7539730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8718"],"@tr":"fd42136e6a75cf8e49d918e595ace952","@sp":"ef1d515244bc81c0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.87175,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000009B","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:52:02.7529140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6320"],"@tr":"10c693794d2369d72149abc1e325c3f1","@sp":"cebb8883b5f5e4c7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.632,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000009D","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:52:05.7545910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8905"],"@tr":"3df37e97b42e7dfc84a61946aaa0bc37","@sp":"67662d94037e1dd8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.8905,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:0000009F","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:52:08.7551280Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3755"],"@tr":"0da5c08c8558c4f1265702ec880c0288","@sp":"7ee9330959f389e2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.3755,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000A1","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:52:11.7580460Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9181"],"@tr":"844af89b0bab7b78914717c5df44406f","@sp":"8955d390816d9d0c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.918083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000A3","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T05:52:14.7574940Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0528"],"@tr":"06d4e3d7069c6ccf2c0f3d34795dae3c","@sp":"09abae141e6a92f0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.052792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000A5","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:17.7563690Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8145"],"@tr":"dc431352c837d6aec936c1707bc89d3e","@sp":"41afc4c0254bcf10","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.8145,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000A7","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:20.7596630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.1269"],"@tr":"c08bedc384f83290ecfec6925493fa8e","@sp":"f5506d95bfc7814f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.126875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000A9","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:23.7561920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9057"],"@tr":"9bb4ac06fd77d1526294c53661fc4508","@sp":"867283ea2ee0d2c4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.905667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000AB","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:52:26.7557920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1686"],"@tr":"ea51496ef9e798fac2272ef49d8529f5","@sp":"c1d6057f8016f811","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.168584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000AD","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:29.7557630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3820"],"@tr":"9b66d328cd87792da8d06518d7ed6129","@sp":"3becb5e878a595c3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.382,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000AF","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:32.7555650Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3278"],"@tr":"d5fd2b925857739863d33e0b640edd72","@sp":"7bc69537e9f9d26f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.327833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000B1","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:35.7542380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4808"],"@tr":"44c401d7cec08923a70bdfa36e027b87","@sp":"6eff5507fbc10378","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.480792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000B3","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:38.7558510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7154"],"@tr":"1c00edde918f935788d12418b46381fc","@sp":"d5fe4fe5d26e5599","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.715417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000B5","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:41.7564390Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9410"],"@tr":"6966f7abec6afb83f233cd6b3c4d5468","@sp":"e066c70404f73c76","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.941,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000B7","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:44.7564240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9391"],"@tr":"f088ca454bd1feb9438b7229b7b247c6","@sp":"d7b7412d3a81db4d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.939083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000B9","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:47.7563300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9318"],"@tr":"122cbf36a62d6970233aaa6264726df3","@sp":"70e24fa0dceb8066","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.931833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000BB","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:52:50.7549510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9689"],"@tr":"6d62f7313ddfef4ebf74ae29793d7804","@sp":"72efe851a3c3e351","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.968875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000BD","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:53.7569690Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5259"],"@tr":"f3e1a9ba1840f85223934ca1e946eb31","@sp":"c41a36593119f6f0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.525875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000BF","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:56.7569180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8729"],"@tr":"123775c846ee01e1294e234f0dd1732f","@sp":"7a76d0196fabcd91","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.872917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000C1","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:52:59.7541480Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5068"],"@tr":"4616a074325df014fe993464f8d2a419","@sp":"758f7bc00be1a09d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.50675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000C3","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:53:02.7543630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7850"],"@tr":"9a47aa30c1a1718f6648b621b5a42aee","@sp":"d481a55992b72145","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.785041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000C5","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:53:05.7580750Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4266"],"@tr":"cef1e3454dcd734415b296d416a83c29","@sp":"6fa000f09b439621","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.426625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000C7","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:53:08.7588330Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0817"],"@tr":"f34fd3650c210ed2775aa1f677271f48","@sp":"9d9929a2453a6337","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.081667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000C9","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T05:53:11.7568420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8887"],"@tr":"4b47668618c6a6bc3bcc64db8a56b673","@sp":"d466e7769f36b9e1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.888708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000CB","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:53:14.7585680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2176"],"@tr":"38f0df805d533432018684ce64c733b7","@sp":"53967f86bb0abb56","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.217625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000CD","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:53:17.7609930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.0699"],"@tr":"c447cb8e93f2185753f3e80e81cbbea1","@sp":"9cba5adddf4c468f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.069875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000CF","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:53:20.7621610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.6997"],"@tr":"7b8aac490ba92184adeccf232a2c7b8e","@sp":"65feb05ef72a7d07","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.699666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000D1","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:53:23.7605980Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.6539"],"@tr":"1f2a39315d432613b2cd1b141cf24f82","@sp":"85fec16c16ef0653","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.653916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000D3","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:53:26.7583650Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.9579"],"@tr":"00b0758db0d67898705a4a4ab638e21c","@sp":"f39cd72729c1da50","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.957875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000D5","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:53:29.7534930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3595"],"@tr":"a11c224532da2c5bca398c676fd76626","@sp":"77b0164040dc7ee6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.359541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000D7","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:53:32.7620920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.6668"],"@tr":"a8c4f24c139f1b310d7914f6d43b1fee","@sp":"ea146a3e71acff12","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.666792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH2918VKC:000000D9","ConnectionId":"0HNESH2918VKC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:53:33.2534690Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e caught stopping signal..."],"State":"Server mac:4286:85c7081e caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:53:33.2543490Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:53:33.2556250Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e All dispatchers stopped"],"State":"Server mac:4286:85c7081e All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:53:33.2601540Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e successfully reported itself as stopped in 3.052 ms"],"State":"Server mac:4286:85c7081e successfully reported itself as stopped in 3.052 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:53:33.2603320Z","@mt":"{State:l}","@r":["Server mac:4286:85c7081e has been stopped in total 6.136 ms"],"State":"Server mac:4286:85c7081e has been stopped in total 6.136 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:53:41.5888140Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"16","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.6830600Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.6852250Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.7075370Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.7123630Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8499760Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8540850Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8541420Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8554740Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8555750Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8556510Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8556870Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8557120Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8557540Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8584260Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8584910Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8585350Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T05:53:41.8651840Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e successfully announced in 5.4769 ms"],"State":"Server mac:6099:cfcbcc0e successfully announced in 5.4769 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:53:41.8659830Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:6099:cfcbcc0e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:53:41.8684470Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e all the dispatchers started"],"State":"Server mac:6099:cfcbcc0e all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T05:54:36.8223140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["44.3273"],"@tr":"ad326f75eda080369604ed4521a01bbe","@sp":"0db762f5e5354672","RequestMethod":"GET","RequestPath":"/hangfire/recurring","StatusCode":200,"Elapsed":44.327292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000007","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:54:36.8267250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5546"],"@tr":"c162eb8734179e0f54dab0c2d43fd95d","@sp":"5d7f35354302d6fb","RequestMethod":"GET","RequestPath":"/hangfire/css-dark18200832650885","StatusCode":200,"Elapsed":2.554583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000000B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T05:54:36.8276580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5062"],"@tr":"a7a87d09758aa69f3932605323682ddc","@sp":"5c008812a24a4773","RequestMethod":"GET","RequestPath":"/hangfire/css18200210738432","StatusCode":200,"Elapsed":3.506167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000009","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:54:36.8288640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.7004"],"@tr":"ae449a76340d4f9d6740cfc618db9981","@sp":"ff4028cf7d57ea46","RequestMethod":"GET","RequestPath":"/hangfire/js18200181684592","StatusCode":200,"Elapsed":4.700375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000000D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:54:36.8693080Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.3940"],"@tr":"f93a156553f6fae69813792b3b55af2c","@sp":"233f3519731677cc","RequestMethod":"GET","RequestPath":"/hangfire/fonts/glyphicons-halflings-regular/woff2","StatusCode":200,"Elapsed":0.394,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000000F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:54:39.7838130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["24.2591"],"@tr":"1dbf5bba18358a428836a34a4ad43be1","@sp":"e59a74dc205013d4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":24.259083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000011","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:54:42.7632980Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.0022"],"@tr":"225ea9c57dcf77b065f46e07f9fb9c95","@sp":"27e00e2bf3ac0ef8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.002167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000013","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:54:45.7619310Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.7934"],"@tr":"5b3d508e6d097ca56bc1628e0595ae7e","@sp":"c845219c020c4d65","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.793375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000015","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:54:48.7601310Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.4932"],"@tr":"13bb2ed821ee8aae38a395f16975523e","@sp":"df1be537b0bc6dc6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.493208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000017","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:54:51.7607550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.4943"],"@tr":"a3b51573395ee2a8ce93389789d3925d","@sp":"eae997c134f64f9f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.494292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000019","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:54:54.7619950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.7436"],"@tr":"eb5b704ba3a0a2e9e0bd1eefb59393a1","@sp":"c575bcaba67b29e7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.743625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000001B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:54:57.7582720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0564"],"@tr":"88e5298dff9bbd78bb820d9f4aaf6211","@sp":"a82033b7298f5ced","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.056375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000001D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:55:00.7595180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.5601"],"@tr":"553229dfe40acecd65a05b7f8b433867","@sp":"05028d45d83408cd","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.560125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000001F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:55:03.7599610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4996"],"@tr":"fdecea37e328710722be421856d093bb","@sp":"aa70c4526d7fa27d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.499583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000021","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:06.7631340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.0379"],"@tr":"7d21e72d2a17a3f4daff4577a769dea0","@sp":"568c60061fd1cde4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.037916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000023","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:55:09.7624590Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.8033"],"@tr":"aa88dbe46e971509112ea8fb3d5045bf","@sp":"dc0cd8c320253098","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.803292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000025","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T05:55:12.7580500Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1148"],"@tr":"d6c7a0bd714ddadf779967074e0ea64e","@sp":"20425759874be49e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.11475,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000027","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:55:15.7653020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.9813"],"@tr":"1fe12fb470088792308b28a37bbf3786","@sp":"296e25d9c2ad5610","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.98125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000029","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:55:18.7568020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8339"],"@tr":"44eb8c5d7cc572aef1e808cce9b51d18","@sp":"8882c66b2910ebb8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.833916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000002B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:55:21.7611800Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.9849"],"@tr":"151306101f90d3181693cbda9fe15442","@sp":"bfe38c0c282590d5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.984875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000002D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:55:24.7588070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1825"],"@tr":"a1c58bdf73dc5d0591a2aa29a98fa982","@sp":"c77e18df91c27f5e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.182458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000002F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:55:27.7565780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5340"],"@tr":"698e2885bf845a8dfdc8ead0f2ae21a2","@sp":"7f5acdc139497cd5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.534,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000031","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:30.7563740Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2984"],"@tr":"d55b550319f262977ae866ce95e55327","@sp":"b6629c7cb892421f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.298416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000033","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:33.7573670Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7975"],"@tr":"dfe35907207970bc8950487c9b67f095","@sp":"157ee36c64b873c2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.7975,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000035","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:36.7585830Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.0276"],"@tr":"84ba16ddd7dd63bd82086792d8aeecde","@sp":"f7d059c8aafc8cdb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.027583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000037","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:55:39.7588760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5888"],"@tr":"3286040010711d676d46e31113ca10e8","@sp":"60a2840d1c4527ad","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.588833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000039","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:55:42.7596760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1828"],"@tr":"05514dc15436ce6b6b427bf47e83ff65","@sp":"d5d581446308fadd","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.182792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000003B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:45.7566720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3683"],"@tr":"0dc5cf71b9a3a87d17e1b670ee2aa8c5","@sp":"c3f5e53d4185e0ba","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.368334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000003D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:48.7605360Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.2958"],"@tr":"329b1edec8394771561103699f51373e","@sp":"74afa794790ff687","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.295792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000003F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:55:51.7573990Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5697"],"@tr":"f40ba129fdad3c896300631a253084e8","@sp":"09d81be20d8ebc3a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.569666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000041","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:55:54.7570320Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8896"],"@tr":"24589235b463cb70e7141657cd2f5f04","@sp":"152bfb655fa72705","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.889625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000043","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:55:57.7573530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2641"],"@tr":"f27fe055ddbc343a5c034df01d6a7569","@sp":"a4f37d2cb777d63a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.264083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000045","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T05:56:00.7560880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4809"],"@tr":"680c45c97980611a155c3cb29cdd447c","@sp":"25c6089bd8fe7a80","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.480875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000047","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:03.7658590Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.4384"],"@tr":"309ce4fa79cf3c1252bf6a6584c57f40","@sp":"5202650f705c7490","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.438416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000049","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:06.7620130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.5146"],"@tr":"63f3c564f35ec3f4a7a48fc878148ac3","@sp":"b6217f7df5f8df39","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.514625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000004B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:09.7565930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4901"],"@tr":"c92ebb7aef2891ead9368fb7b144f464","@sp":"aaa157291b87dd3b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.490125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000004D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:12.7556610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0672"],"@tr":"c202ee3e05c2fae6bb9c3a1cfb968e66","@sp":"7ade543fd8b117e5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.067166,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000004F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:15.7575880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1059"],"@tr":"4089a7f3f7d1ad44614d5b3265ebb346","@sp":"5c7306a02994b5bc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.105916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000051","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:18.7565660Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2971"],"@tr":"5d46a46ef76857ec3a9de4da31b49aaf","@sp":"a6a17924c5ea97e2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.297125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000053","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:21.7574640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4461"],"@tr":"970cffa57ac36a2a581da913909e3e87","@sp":"566f7e4defb441e0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.446084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000055","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:24.7569880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4875"],"@tr":"9ed71a5d0ad8388db165041acc79b6a6","@sp":"f4466ce879c47759","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.4875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000057","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:56:27.7574630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9938"],"@tr":"66ed1d6cc2927b9ac843004a5a2c22e5","@sp":"7607551f8043a4d7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.99375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000059","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:30.7563240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1240"],"@tr":"501494d8578d5725fa0d8d60fec7b7f0","@sp":"a3081ad794ecf47d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.123958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000005B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:33.7581740Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5576"],"@tr":"82de86413e093dcc7dcef5195c6a8a23","@sp":"a4c4e30cd11e1a26","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.557584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000005D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:56:36.7573950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2983"],"@tr":"ce446dd0f858b60ab1b760b65bcbc5d4","@sp":"629b0d5d2cf22d9e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.298292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000005F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:56:39.7563180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1635"],"@tr":"0da2f2060fd2fda33da855f628c51c22","@sp":"a2094b8fad20beb1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.1635,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000061","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:42.7591540Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1216"],"@tr":"585010dfd4339f17495689c39b4ccb4e","@sp":"8880e88c4cde0e0f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.121625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000063","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:45.7567550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0484"],"@tr":"a1e229b26c5c7dcc5cf08377ae518729","@sp":"436b0b9c5f192a24","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.048375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000065","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:48.7780680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["16.9788"],"@tr":"1a271ef37f4bdc65ce0ef43a74f1fd86","@sp":"25927584bd2cfc69","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":16.97875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000067","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:51.7567910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4670"],"@tr":"75e7f85ef82c01b08816bf8be5a65b14","@sp":"359a5b4a227050f5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.467,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000069","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:56:54.7563240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0786"],"@tr":"9aec17ea9f7fba83b3aa91e44e4aa515","@sp":"f4520181f7157ff8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.078583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000006B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:56:57.7574300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4648"],"@tr":"212dde9de0b827fe90feb1f6a249ab03","@sp":"90cce9e6f8d6a013","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.464833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000006D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:00.7585850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0026"],"@tr":"6170cf814b9eb4c69a166a7101e70879","@sp":"8a379fe2a4fc7831","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.002625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000006F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:57:03.7569810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6015"],"@tr":"320983fbb881a3a74d84f60e1ddd4880","@sp":"d41c97c1e438e3f9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.6015,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000071","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:06.7580240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.6484"],"@tr":"12b9038c3bdf65a8f9afa64339ce2a3c","@sp":"8c871d48baff3cad","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.648417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000073","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:09.7607270Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.2186"],"@tr":"c32e18a1a5a194e7cf1ad0213f3d96b8","@sp":"aeeb7b404ba1cf5e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.218584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000075","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:57:12.7592980Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5168"],"@tr":"59e862f6be086b5db64acee3a31972b1","@sp":"967255a4721c1491","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.516833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000077","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:57:15.7576760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3977"],"@tr":"b830cb737cf18c63254ec067571458be","@sp":"0eb9eef23b1b0dc8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.397667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000079","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:18.7587250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2858"],"@tr":"3ee27941a7072f0257590e2caa9c138c","@sp":"dfab6c1087c808df","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.28575,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000007B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:21.7610970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.1008"],"@tr":"2bbc21fcba2efea711347c90882a2566","@sp":"f46c29b318705a20","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.100833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000007D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:24.8029090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["48.0397"],"@tr":"0be2dd63e67be3b24a73da8acbde4cf0","@sp":"01cada8fb07ab19f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":48.039667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000007F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:27.7573930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5583"],"@tr":"5fe0694540daaf43409d792ce63d2073","@sp":"9174c06dae57ecef","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.55825,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000081","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:30.7592160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.8602"],"@tr":"64218714c81e39f83153e0abebc9d688","@sp":"35d4411d96bd9ead","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.860209,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000083","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T05:57:33.7674030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["11.0425"],"@tr":"b8a1ed88809e07c1cef565c5e481d97c","@sp":"9f05d679196ec1f8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":11.042458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000085","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:57:36.7580010Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5962"],"@tr":"28447f93a5ddb8946d11e4c60c40b8a4","@sp":"af36668d2ee51cdc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.596167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000087","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T05:57:39.7634090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.0661"],"@tr":"1b44aade91694fdd49b246ffd9bba4b1","@sp":"e437b09edb0bc6f0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.066125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000089","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:42.7630630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.7887"],"@tr":"b73bf1b01f58c1da39bab587920a01f5","@sp":"5053290c6fd1c54d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.788666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000008B","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:57:45.7588190Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9133"],"@tr":"b78bdef5c5fcfde9c8bc5b32e1e8b56c","@sp":"33c534d6924ab08b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.913333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000008D","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:48.7950790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["39.6968"],"@tr":"b129532bade10a59b377bf77647a34a5","@sp":"9ecd3531389489b0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":39.696792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:0000008F","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:57:51.7603120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.4535"],"@tr":"1cd5490edba07e5d54036b706b3ee627","@sp":"aaf230d8a7127d32","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.453459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000091","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:57:54.7657800Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.9369"],"@tr":"143b91db0f02fcbef20d2a2d9dbaac75","@sp":"ec3c958076ed7dab","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.936875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000093","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:57:57.7700280Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.4152"],"@tr":"3c59e70aab5796e8deab29ff79676e92","@sp":"916855ca82191254","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.415167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000095","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:00.7633090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9030"],"@tr":"9ff76926e43bc1ad015fbb088218fcca","@sp":"fefa72a416187039","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.902958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000097","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:58:03.7571930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4412"],"@tr":"659e3a592611b15b2813974c0c057e34","@sp":"196a32edccfd7be5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.441209,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAC:00000099","ConnectionId":"0HNESH52HRMAC","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:58:06.8092600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6237"],"@tr":"3298072c8ad7643dfe945e1dfb0bd275","@sp":"cebdca71d04cfe15","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.623708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:00000001","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":55}
{"@t":"2025-08-16T05:58:09.7567070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0533"],"@tr":"a9647bf2aab41f392450eaf1b2fcee5d","@sp":"49fa130bb04154af","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.053292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:00000003","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:58:12.7556370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3032"],"@tr":"c50f4557137baff20ecd440cc0192ef2","@sp":"a852f5d283e1dfd8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.303208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:00000005","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:15.7671540Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["12.6069"],"@tr":"2152dbf8afb7b4df98da19ce2ef49bdc","@sp":"29522fd9ded30934","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":12.606917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:00000007","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:18.7737560Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["18.4206"],"@tr":"115f39fe383dd3c4768850d4a9b4605c","@sp":"0ea4ec4666f0c6ca","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":18.420584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:00000009","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:21.7600110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1010"],"@tr":"7e66831deed5c5eef0e4aea068cc04b8","@sp":"95d4d59a87a1c61d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.101042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:0000000B","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:24.7594500Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1828"],"@tr":"a80a5ec5c800d909f4c50e4b0c1f08ca","@sp":"830d946125432432","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.182791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAE:0000000D","ConnectionId":"0HNESH52HRMAE","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:58:27.8071200Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2224"],"@tr":"d49c0bcc14b7cf9cb593523d8c11d18d","@sp":"edf788db84607ed1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.222416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAG:00000001","ConnectionId":"0HNESH52HRMAG","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:30.7872560Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9053"],"@tr":"42c1455886a02f601dd0d27453db7b46","@sp":"a49e801e8e2d6915","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.90525,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAI:00000001","ConnectionId":"0HNESH52HRMAI","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:33.7565300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0441"],"@tr":"b0609eecf3aff1595b0e017e8917e470","@sp":"63bf87d77feb4a6a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.044084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAI:00000003","ConnectionId":"0HNESH52HRMAI","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:36.7834790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7794"],"@tr":"22313a2c2429d32cf3f3513a6b03d43e","@sp":"fcf2cd4e652894d1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.779375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAK:00000001","ConnectionId":"0HNESH52HRMAK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:58:39.7570020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0738"],"@tr":"c1ce767a9ab10640c46073b3e8301d1e","@sp":"37833d97325eeff1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.07375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAK:00000003","ConnectionId":"0HNESH52HRMAK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:58:42.7878570Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.7906"],"@tr":"60743e87086a3d7173182b488bc3560e","@sp":"cc45173e8e176b10","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.790583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAM:00000001","ConnectionId":"0HNESH52HRMAM","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:58:45.7861160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.2739"],"@tr":"3da507d0aa7459c6bc2cb8411018aa85","@sp":"4c997d0105254fb3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.273875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAO:00000001","ConnectionId":"0HNESH52HRMAO","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:48.7765100Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5821"],"@tr":"4a6ee140067de1ebf2b2682e109f44ca","@sp":"158864ed9f99263b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.582083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAO:00000003","ConnectionId":"0HNESH52HRMAO","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:58:51.7805380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8756"],"@tr":"f071843dab0046ff3786c7f5c78783c0","@sp":"91a1c0d22a38812d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.875584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAQ:00000001","ConnectionId":"0HNESH52HRMAQ","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:58:54.7545810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2543"],"@tr":"fb72eb167e65449d2097e3443b6bcc22","@sp":"0dcbf45c14efaf15","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.254291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAQ:00000003","ConnectionId":"0HNESH52HRMAQ","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:58:57.7833820Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2617"],"@tr":"43c58e77ecd3ac0de98585edf9b9c001","@sp":"447bdadedbcdb500","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.261667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAS:00000001","ConnectionId":"0HNESH52HRMAS","MachineName":"Mac","ThreadId":60}
{"@t":"2025-08-16T05:59:00.7881730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1614"],"@tr":"d12738fdf6c29dfa89d52ec7fd80983e","@sp":"1b7e70085230b44a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.161417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAU:00000001","ConnectionId":"0HNESH52HRMAU","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:03.7545610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2882"],"@tr":"fd2f8b72d095b8a3d8093c8cfaf9b418","@sp":"44eee305522c7d1c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.288167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMAU:00000003","ConnectionId":"0HNESH52HRMAU","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:06.7961830Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4896"],"@tr":"e956e5fbe28ed1a994093b90047996c7","@sp":"534a0b076a12f53f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.489583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB0:00000001","ConnectionId":"0HNESH52HRMB0","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:09.7539660Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5564"],"@tr":"6e9c2657b54e098fd14f2db67a51af19","@sp":"4565720314808cc2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.556375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB0:00000003","ConnectionId":"0HNESH52HRMB0","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:12.7849210Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9408"],"@tr":"4aa1c66e4751316e20f09c97b37ef2e1","@sp":"c5906a10bbcdfcb4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.940792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB2:00000001","ConnectionId":"0HNESH52HRMB2","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:15.7845680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5727"],"@tr":"4fe3981f9397e4ebc086ea948b1ec057","@sp":"f8413196e4026935","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.572708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB4:00000001","ConnectionId":"0HNESH52HRMB4","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:18.7576670Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6354"],"@tr":"ea7d37636d2bbd14801721d73e100f5e","@sp":"71923175c9efa5a2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.635375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB4:00000003","ConnectionId":"0HNESH52HRMB4","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:21.7828100Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0326"],"@tr":"b3e73f665022ae74975d5dfd4b243fae","@sp":"b8ca5d59d991de96","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.032584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB6:00000001","ConnectionId":"0HNESH52HRMB6","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:24.7574760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8628"],"@tr":"9c996822da44e2e08055562e581ff214","@sp":"ac283df40dd1e3cc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.862834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB6:00000003","ConnectionId":"0HNESH52HRMB6","MachineName":"Mac","ThreadId":58}
{"@t":"2025-08-16T05:59:27.7842260Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2774"],"@tr":"b9b832c2e3a7dc651d5ca6b8095d1bc6","@sp":"5f8ccc53fe330cbb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.277417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMB8:00000001","ConnectionId":"0HNESH52HRMB8","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:30.7826610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0978"],"@tr":"4c0ca6929fdd48e6e37e1183777f548f","@sp":"52e675d2a86afe83","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.09775,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBA:00000001","ConnectionId":"0HNESH52HRMBA","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:59:33.7715150Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1118"],"@tr":"83c3bb797556921f4bfda1f4caf656f8","@sp":"def7218fb20ca85d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.11175,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBA:00000003","ConnectionId":"0HNESH52HRMBA","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:36.7877000Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8101"],"@tr":"58ebfa86977d27aab57649a522d07db0","@sp":"c6b1b1fdf0db7049","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.810125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBC:00000001","ConnectionId":"0HNESH52HRMBC","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:59:39.7581140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9548"],"@tr":"8b9eb00e1a7b6787912d381d05901c65","@sp":"d44ec8ea2bee5b24","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.954792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBC:00000003","ConnectionId":"0HNESH52HRMBC","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:59:42.7844580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8596"],"@tr":"3c3eea94f79c76a0c7f2eb54c5e1a013","@sp":"187590b24108df48","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.859625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBE:00000001","ConnectionId":"0HNESH52HRMBE","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T05:59:45.7862290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9398"],"@tr":"de70d8240629d51a100746c2a5f1107b","@sp":"bcb6006a7a298648","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.93975,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBG:00000001","ConnectionId":"0HNESH52HRMBG","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:48.7616570Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.1287"],"@tr":"235634b47f01e27c977233ee6c10cf08","@sp":"cc0710e22e1a6e3a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.128708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBG:00000003","ConnectionId":"0HNESH52HRMBG","MachineName":"Mac","ThreadId":57}
{"@t":"2025-08-16T05:59:51.7845140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1313"],"@tr":"90d98ebef6caba8b8fdb7c27bd370317","@sp":"784b37d0b355bca1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.13125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBI:00000001","ConnectionId":"0HNESH52HRMBI","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T05:59:54.7603750Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.7148"],"@tr":"60af726afc3ad3aecfa28641a1c737ea","@sp":"dc16322dd3f162a0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.71475,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBI:00000003","ConnectionId":"0HNESH52HRMBI","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T05:59:57.8005750Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1880"],"@tr":"049af09c429fbcef7fca69117b1fcc5a","@sp":"e2be1ae4bd3878bf","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.187958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBK:00000001","ConnectionId":"0HNESH52HRMBK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:00:00.7897400Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9802"],"@tr":"628476c7cbc166f18e7ca0f1458a306e","@sp":"5012c4745b3af4a5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.980208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBM:00000001","ConnectionId":"0HNESH52HRMBM","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:03.7588120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5749"],"@tr":"ccd7f1668fd1155182b869a37966d363","@sp":"2858e6d93b024968","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.574875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBM:00000003","ConnectionId":"0HNESH52HRMBM","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:06.7848220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6375"],"@tr":"4edb80ca95f6683c4ea8bda42bba24e4","@sp":"0f11d30c05aeba9a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.6375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBO:00000001","ConnectionId":"0HNESH52HRMBO","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:00:09.7615130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.2362"],"@tr":"da6d370ba2a129b6f7d87d9ab573e54e","@sp":"7ce91de8f6fe4a32","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.236166,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBO:00000003","ConnectionId":"0HNESH52HRMBO","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:12.4321120Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"10","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:12.7860620Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.3568"],"@tr":"5bfa02f75b023de8870bf1008119f967","@sp":"b79df7a70f470c37","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.356833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBR:00000001","ConnectionId":"0HNESH52HRMBR","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:15.7932170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["9.6999"],"@tr":"bdf761b5c0d588607822edc9d6abf33c","@sp":"cda0bc65a32876a7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":9.699875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBT:00000001","ConnectionId":"0HNESH52HRMBT","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:18.7619920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4295"],"@tr":"d50e36d7251e3c2517e388655deec573","@sp":"0d6a5d825289949d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.429541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBT:00000003","ConnectionId":"0HNESH52HRMBT","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:21.7816810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9479"],"@tr":"0899e639cf6ececfff665e19b73c439c","@sp":"91c094b1d80ad64f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.947875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBV:00000001","ConnectionId":"0HNESH52HRMBV","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:24.7556000Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6909"],"@tr":"6fc0570d4a867c3206cb5b95ae504939","@sp":"13ed7e27b3e3f189","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.690875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMBV:00000003","ConnectionId":"0HNESH52HRMBV","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:27.7832640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3239"],"@tr":"330434dc5abf47f5dfe1e1178bade6ff","@sp":"3acf7d9218c0934c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.323875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC1:00000001","ConnectionId":"0HNESH52HRMC1","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:30.7805200Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3901"],"@tr":"8115df7e661778d288ba42046cf6331d","@sp":"d92dd96f8d302f09","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.390125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC3:00000001","ConnectionId":"0HNESH52HRMC3","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:33.7677520Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.4216"],"@tr":"17ff4956cdb44c85305a2a20f10b0dd4","@sp":"e6b727edd4f111b8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.421625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC3:00000003","ConnectionId":"0HNESH52HRMC3","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:36.7813820Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3555"],"@tr":"45708f48e84c143fd4e88b48fd3f33b3","@sp":"e581100cb2500d15","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.3555,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC5:00000001","ConnectionId":"0HNESH52HRMC5","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:39.7555330Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3878"],"@tr":"9e97bdaab02b853d3435f4f545f0bd55","@sp":"6f41a24e0a61ef77","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.38775,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC5:00000003","ConnectionId":"0HNESH52HRMC5","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:42.7857050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2648"],"@tr":"fb9f8135dcfb01506186373754f6577e","@sp":"f48451095e663914","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.264833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC7:00000001","ConnectionId":"0HNESH52HRMC7","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:00:45.7848130Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9793"],"@tr":"b7981216b7004ad783a9ae99bb604b90","@sp":"a7c3e8c47e8f7db1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.97925,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC9:00000001","ConnectionId":"0HNESH52HRMC9","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:48.7602010Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1683"],"@tr":"060d6ea795910d9586f4a5c7d122dbef","@sp":"337b4d89e52400c4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.16825,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMC9:00000003","ConnectionId":"0HNESH52HRMC9","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:00:51.7875000Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9464"],"@tr":"9832ac555dca2d01dc13c776ac8a3a8c","@sp":"06524afdd93de3c1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.946375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCC:00000001","ConnectionId":"0HNESH52HRMCC","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:00:54.7567340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3009"],"@tr":"fde89f8acf293bfba1335071c60ba201","@sp":"da3509f7a7491392","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.300917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCC:00000003","ConnectionId":"0HNESH52HRMCC","MachineName":"Mac","ThreadId":65}
{"@t":"2025-08-16T06:00:57.7907960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9815"],"@tr":"60a3a7ea28dd6812ac282b677156b9d8","@sp":"78e4d8cfc06c49f6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.981458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCF:00000001","ConnectionId":"0HNESH52HRMCF","MachineName":"Mac","ThreadId":65}
{"@t":"2025-08-16T06:01:00.7829900Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5960"],"@tr":"f07285e80ef7a0543d7109ba80a905c4","@sp":"71bdec9531bac26c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.596041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCH:00000001","ConnectionId":"0HNESH52HRMCH","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:03.7697180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0679"],"@tr":"7be207634b0e771661d9dd18efa78565","@sp":"2cddc6d3dd4b3e56","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.067875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCH:00000003","ConnectionId":"0HNESH52HRMCH","MachineName":"Mac","ThreadId":65}
{"@t":"2025-08-16T06:01:06.7901220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.8425"],"@tr":"d6e6aa493e6b5e457cdb4e50a86b79dc","@sp":"dd2347f6ee1e9998","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.842458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCJ:00000001","ConnectionId":"0HNESH52HRMCJ","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:09.7604420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6350"],"@tr":"9b4d48a2d2a50b72b360e55372134f70","@sp":"79d43dd14a9adcff","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.635042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCJ:00000003","ConnectionId":"0HNESH52HRMCJ","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:12.7843930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4200"],"@tr":"7f73dbba3b5aee129b344841895d5678","@sp":"2d68cdb6407e5811","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.42,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCL:00000001","ConnectionId":"0HNESH52HRMCL","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:15.7855260Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9104"],"@tr":"63cb26f1728c4587f477c27790cff0cf","@sp":"75802c54a3f3f9c2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.910375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCN:00000001","ConnectionId":"0HNESH52HRMCN","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:18.7631800Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2330"],"@tr":"0cf10319356af37c467c38cc4e563134","@sp":"e999e07c3a45b72a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.233,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCN:00000003","ConnectionId":"0HNESH52HRMCN","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:21.7832090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6915"],"@tr":"beab95a07404207331d1b5a463d11e75","@sp":"228bb9205eb44707","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.691458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCP:00000001","ConnectionId":"0HNESH52HRMCP","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:24.7573040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8469"],"@tr":"3294f6f53b2e640af752335e31194600","@sp":"28eaa2f6fff0dd64","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.846875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCP:00000003","ConnectionId":"0HNESH52HRMCP","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:27.7842370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9683"],"@tr":"b6e34fa1aa0b87bdf2175d0f08d9f774","@sp":"5796842ead0d8b1e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.96825,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCR:00000001","ConnectionId":"0HNESH52HRMCR","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:30.7862640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6690"],"@tr":"c63d8d4f3f0858c226f82344a61983cd","@sp":"c3499a5dc033f8a1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.669,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCT:00000001","ConnectionId":"0HNESH52HRMCT","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:33.7703870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5124"],"@tr":"10af5cb696be353c9ac321c51db0b9d3","@sp":"9db4732ac0f3846f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.512375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCT:00000003","ConnectionId":"0HNESH52HRMCT","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:36.7841070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8708"],"@tr":"994856219c3df5cf27b9e7f99859ca14","@sp":"5a0843392f5cd514","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.870833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCV:00000001","ConnectionId":"0HNESH52HRMCV","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:39.7623290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.6123"],"@tr":"744e9a692c2eadef1f50c64d4207c4df","@sp":"cdbf4a23407392bb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.612292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMCV:00000003","ConnectionId":"0HNESH52HRMCV","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:01:42.7828330Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9284"],"@tr":"40ad82a233002151727107b8e3b697d3","@sp":"5ac272190e153421","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.928417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD1:00000001","ConnectionId":"0HNESH52HRMD1","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:45.7828580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9503"],"@tr":"0cfe17794562b47992bef75b9628dcc3","@sp":"fb578ac2fc0c6c4e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.95025,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD3:00000001","ConnectionId":"0HNESH52HRMD3","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:48.7605430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5368"],"@tr":"c35ba675ce28f852dde809a00f826c9e","@sp":"6a766c08c580ce11","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.53675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD3:00000003","ConnectionId":"0HNESH52HRMD3","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:51.8484160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.6583"],"@tr":"bd3c00b655f0936d882a5a91e7307f30","@sp":"bda117b3a5e04498","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.658292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD6:00000001","ConnectionId":"0HNESH52HRMD6","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:01:54.7564270Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2854"],"@tr":"0b53917ab3bebe9bca09ab1f2102bc12","@sp":"5d03dec3768a28b4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.285375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD6:00000003","ConnectionId":"0HNESH52HRMD6","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:01:57.7802220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2971"],"@tr":"754068906e5add3b7475d9b034a9ce21","@sp":"0058bb4d9672bb16","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.297083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMD8:00000001","ConnectionId":"0HNESH52HRMD8","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:02:00.8041070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9694"],"@tr":"1b8fff929dbf195695ae722916301a7d","@sp":"6b1382e8c1256ac9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.969416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDA:00000001","ConnectionId":"0HNESH52HRMDA","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:03.7620350Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.3329"],"@tr":"728874b62a6af242dd645e520cb01d5b","@sp":"6d9a73c12ca2568c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.332875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDA:00000003","ConnectionId":"0HNESH52HRMDA","MachineName":"Mac","ThreadId":66}
{"@t":"2025-08-16T06:02:06.8766630Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5665"],"@tr":"4969e5eab5d7dc39eb56fba6280269ed","@sp":"4f2f7203ae85bfe6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.5665,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDC:00000001","ConnectionId":"0HNESH52HRMDC","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:02:09.7567920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8724"],"@tr":"906f81a7eb8fd94dca19fd93b7af360a","@sp":"13cb7f4ddaa753e4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.872417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDC:00000003","ConnectionId":"0HNESH52HRMDC","MachineName":"Mac","ThreadId":66}
{"@t":"2025-08-16T06:02:12.7890050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5201"],"@tr":"0c90ff730735239a98713db02fc79cd0","@sp":"225ce388115041f3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.520083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDE:00000001","ConnectionId":"0HNESH52HRMDE","MachineName":"Mac","ThreadId":59}
{"@t":"2025-08-16T06:02:15.7897410Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.4238"],"@tr":"7ee635b5f42f74464e9fef60506d65f4","@sp":"29ea8d9224ddb3f2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.423834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDG:00000001","ConnectionId":"0HNESH52HRMDG","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:02:21.5491380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["10.4782"],"@tr":"426f52e8380c44406219957f90e4d714","@sp":"a4a1f74986f6b54f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":10.478167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDI:00000001","ConnectionId":"0HNESH52HRMDI","MachineName":"Mac","ThreadId":61}
{"@t":"2025-08-16T06:02:23.7705250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["12.1188"],"@tr":"c2680ee4024088928707e07bb05f4353","@sp":"087b21797f91a6d6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":12.118834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDI:00000003","ConnectionId":"0HNESH52HRMDI","MachineName":"Mac","ThreadId":59}
{"@t":"2025-08-16T06:02:26.8422780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.7795"],"@tr":"6b076374c95f2010d8c5b21aa963c1e3","@sp":"be6dea54c24d0606","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.779541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000001","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:29.7595770Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6399"],"@tr":"1eb0d8c5d5a9f37ca2ada97ca61eb790","@sp":"4bc0a8fd09cdaca5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.639875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000003","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:02:32.7678860Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["10.9180"],"@tr":"de163aa9d775fd95f4c939e74a49b922","@sp":"926229afffe291b0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":10.918,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000005","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:02:35.7584730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0624"],"@tr":"0e6c8c2bb2e98a2bdba5d11499dff6e1","@sp":"dd00f964c4a21852","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.062375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000007","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:38.7588680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6654"],"@tr":"3aeb3e14bfc53f41bcdd8df82c5910b8","@sp":"3762ea935c2f426a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.665417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000009","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:02:41.7665110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7681"],"@tr":"bdf48cda276aea4fe8cdc84dd870aa1c","@sp":"47e9f8bd751087e8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.768084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000000B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:44.7575350Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7237"],"@tr":"061242e45fa89bcb07d8125d65e9610c","@sp":"f2856c47eaf8535f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.723709,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000000D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:47.7594340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6005"],"@tr":"38c4518a1436da9c2e1a42618c248ff2","@sp":"30781593728c8402","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.6005,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000000F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:02:50.7644640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.4284"],"@tr":"3a548e9df882ffcc30052915b1645868","@sp":"3020bf746246cf26","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.428375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000011","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:02:53.7601720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1997"],"@tr":"ae730283efebb96cce983a799bf5a49e","@sp":"0018bb9fccb05f5f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.199708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000013","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:02:56.7613650Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4677"],"@tr":"72d23f284610ef91860ef46f810833c2","@sp":"d7c2c619973b081e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.467667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000015","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:02:59.7563070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.0563"],"@tr":"a2ad30eb01c29f8c15ae8a30f2f39c0e","@sp":"d366743e8e0e757f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.05625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000017","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:02.7579300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3030"],"@tr":"ed90514410967f112ca80a99de0d2332","@sp":"37f368a36a07a0b3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.303,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000019","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:05.7571340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8092"],"@tr":"48828ac033e9291d2adc636c4605b79e","@sp":"0555ddd3e2cd371a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.809167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000001B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:08.7613760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8861"],"@tr":"373a25ef8f2060e541a108cd9f8709bd","@sp":"5359bd0d51c8d399","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.886083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000001D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:11.7569700Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3475"],"@tr":"2d01788ff8783e4813708a85e340f7cc","@sp":"3e4af2c96b404e0f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.347459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000001F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:14.7580900Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6208"],"@tr":"d109fd51b44157d09f21b273726fb484","@sp":"113f179e58244be7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.62075,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000021","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:17.7589450Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.1820"],"@tr":"f522f95fbed631b5f0e13b30bb92121d","@sp":"9b511b26468bffe1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.182041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000023","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:20.7577850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6561"],"@tr":"920f7172e4abb79e7d15e3edcea4025d","@sp":"d123366c1970379f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.656125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000025","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:23.7592790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5990"],"@tr":"bdd62b6b5aa782b77f8938dbe8e1dd70","@sp":"e33b3f4ec26d2159","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.598959,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000027","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:26.7585900Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7892"],"@tr":"2ea00fe98de1350bd7da49642509c39f","@sp":"79bd8e947de5efda","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.789166,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000029","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:29.7579780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0713"],"@tr":"44d53c757bd37ac412d79c4053d03737","@sp":"f3ebe513b97e6132","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.07125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000002B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:32.7565930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.1887"],"@tr":"67745ea0a90b08ea9b5addd4998dda37","@sp":"78993e704ab8ecac","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.188709,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000002D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:35.7594530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9373"],"@tr":"5a97e9764e56a316989d9fc324c61dc2","@sp":"f3876382660067d0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.93725,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000002F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:38.7560040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3360"],"@tr":"f09213a2971e0a6537b9c86e2d4588b5","@sp":"74a58019ca4459b0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.335958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000031","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:41.7578040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0525"],"@tr":"ab45a12a2ba9d2bc2faf2781427db78b","@sp":"c46fce35ddfcd032","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.052541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000033","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:44.7601160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.8943"],"@tr":"02b3406d2e89bb8603fc9c32dcf2a661","@sp":"4bf0a64b80cd838e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.89425,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000035","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:47.7609180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9919"],"@tr":"1ff2ab5477f85cc272965fa8219ca398","@sp":"14112d4b7c2295a6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.991916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000037","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:03:50.7629970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.1789"],"@tr":"7f8a396ea3e146730c37450d93329ce1","@sp":"9e32d3be0afb612e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.178875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000039","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:53.7597120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9481"],"@tr":"5937f611733e5bb9fb8eb3ef696e1688","@sp":"e046997164264af8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.948083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000003B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:03:56.7590850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2146"],"@tr":"c95a6dcd5a5cc1258185fb2fb1ae0236","@sp":"6ceef0a21bc5a337","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.214625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000003D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:03:59.7580040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4109"],"@tr":"a36c7b2df8f61bdb7ad8687eaafea4ff","@sp":"442bc41c5517ce84","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.410875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000003F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:04:02.7578260Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7204"],"@tr":"1a68b1ae60feaa19e97920278418967c","@sp":"3685150f6f10d096","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.720375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000041","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:04:05.7603930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1023"],"@tr":"ce1ee0b742d79cbb4cc6e85afe8c51cb","@sp":"faf4781a50d8650b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.102334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000043","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:04:08.7620840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.5827"],"@tr":"b308976f28b8c715d671819b6af69736","@sp":"2fcd6fbd5ebf2f2f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.582708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000045","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:04:11.7601320Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8892"],"@tr":"91ff453c7982509b4629718b66b62c7c","@sp":"93295cb16c867bcf","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.889208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000047","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":3}
{"@t":"2025-08-16T06:04:14.7607720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8983"],"@tr":"cb07f002d4a3999939d2c539e4fc1342","@sp":"06ff393b289babe3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.89825,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000049","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":68}
{"@t":"2025-08-16T06:04:17.7595120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5799"],"@tr":"9fbfe21d35e8f8705e2a738ca6f26b0d","@sp":"5c72d3a09072ed46","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.579917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000004B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":71}
{"@t":"2025-08-16T06:04:20.7625300Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2523"],"@tr":"27ba7e9757b1fc4d82b38f6356b18c16","@sp":"8c094f65467e1737","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.252291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000004D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":71}
{"@t":"2025-08-16T06:04:23.7586570Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6756"],"@tr":"3c08c5f21742cf7ace60d6c16effa447","@sp":"1b00ec626c8bd206","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.675625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000005F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:04:26.7587720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1672"],"@tr":"725c7c3ed59b0c74c5471a563a4d33da","@sp":"b18d04ffcf2959be","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.167208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000061","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:04:29.7612430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3719"],"@tr":"ac7120951aee73e5d96ebd487cea7793","@sp":"70795d3acd96b058","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.371875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000063","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:04:31.3756510Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"0c6f53314b7c1c950d09b1f1e5fb2b04","@sp":"07787b2200dc551c","elapsed":"4","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"d05515e0-fc82-406b-b871-c0d980824b6f","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH52HRMDK:00000065","RequestPath":"/api/Auth/login","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:04:31.4076000Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["133.1415"],"@tr":"0c6f53314b7c1c950d09b1f1e5fb2b04","@sp":"07787b2200dc551c","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":133.141459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"d05515e0-fc82-406b-b871-c0d980824b6f","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESH52HRMDK:00000065","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:04:32.7605730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4410"],"@tr":"bdc36b967fdfc10c12e9c15f4a0e6e18","@sp":"40cd985212fd6c49","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.441,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000067","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:04:35.7612380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0964"],"@tr":"9803cc837b3d51b05c145e8be654f879","@sp":"2a10ad0b3a67dd53","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.096417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000069","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:04:38.7601050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8948"],"@tr":"8fad286b1ffe9a49145f0a9c9ed38740","@sp":"eb4f470212c93173","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.894791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000006B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:04:41.7590700Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2878"],"@tr":"4e4b368645b0e303f6f8b1e040045d5f","@sp":"4ade365ac3e672d4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.287833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000006D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:04:44.7632710Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1546"],"@tr":"0d910f1fb3ba0a21b4374df5e66b5fc5","@sp":"1269f7809fbbd304","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.154583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000006F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:04:47.7601710Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0995"],"@tr":"470a5f0e0f97bc00e032a4cf8a4eeb2e","@sp":"05da0cf515732b67","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.099541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000071","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:04:50.7609360Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5365"],"@tr":"4c7248638538d19c0b0a680c5a7d4818","@sp":"b121717b4ba1ac0c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.5365,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000073","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:04:53.7594940Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7908"],"@tr":"11b8d466de87175f7a03f930cea2e6dc","@sp":"afbd4e6f1d40884b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.790833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000075","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:04:56.7592600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6434"],"@tr":"42d47c194795640470b743dbd1120e8f","@sp":"68ceeffc2590d25b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.643375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000077","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:04:59.7736840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.8960"],"@tr":"355441ccb506299610e9103967c54a20","@sp":"fa58d629cfd727b5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":8.895958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000079","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:05:02.7599600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3761"],"@tr":"ba8631272484048efaacba4736e36b4d","@sp":"6760c1914447b380","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.376084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000007B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:05.7612820Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1496"],"@tr":"a74d586c29007b5154de9141304804f7","@sp":"f38f126732311ea8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.149625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000007D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:08.7590960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7787"],"@tr":"aa03381fd19a25c34ef2e9a09f7841c5","@sp":"cd810c2eb62286b4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.778667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000007F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:11.7589400Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1383"],"@tr":"8b128ac66cf7f0f69fbb65f07001ded9","@sp":"fa64564f2303be52","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.138333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000081","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:14.7602530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6945"],"@tr":"3f09a1b4a2dcd454ce29268ebdbc5b02","@sp":"879a1bf4b2f5e85e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.694542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000083","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:17.7608650Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9595"],"@tr":"4952ccfd6bebdffe878535a85d1895b0","@sp":"754d105728f9c296","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.9595,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000085","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:05:20.7607620Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5769"],"@tr":"fc4ac76cc64c3065ff867d1643ee1516","@sp":"6f0c35755df5a339","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.576916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000087","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:23.7616790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.4833"],"@tr":"75966ff52b160595425e4537d793e31c","@sp":"3bc905991b3d98fb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.48325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000089","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:26.7611180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2688"],"@tr":"c0b9c23b51e782e7dff4e8f0ef2c02d8","@sp":"db6b354ed1b0d5a8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.268792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000008B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:29.7599140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0700"],"@tr":"6bed31e33f69010dcbbcbdb9b82c50e1","@sp":"4ae3c1333ac8109f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.069958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000008D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:32.7596440Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1693"],"@tr":"60ef310b7816549ec3bb06a03c0a66b6","@sp":"30bd942aeac778dd","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.169333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000008F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:35.7595910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3491"],"@tr":"5bd22076b52e645063d1199b749fd6bf","@sp":"69aa6affd99826e4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.349125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000091","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:38.7593860Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7645"],"@tr":"d6144c0dd6a324e30df7ed95aea06847","@sp":"a20cf74c8791ae4d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.764542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000093","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:41.7614750Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9598"],"@tr":"a0a93d7dd9676791d3649ca99920ef72","@sp":"2b0bcf920aaf8cf8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.95975,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000095","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:44.7622080Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4698"],"@tr":"af8c14b2f05334f85be27539c8c83c46","@sp":"e580bc7762bd18d8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.469833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000097","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:47.7595160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8274"],"@tr":"4f4a92174a9a8758ed7becd26fb8147e","@sp":"1744ddc4331627a9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.827375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000099","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:05:50.7611280Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0194"],"@tr":"0f0c39f4de78d1cb243b11cce0ab551a","@sp":"352815b8c863dfec","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.019375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000009B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:05:53.7611250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0333"],"@tr":"5f12c1ee6ea7ea3dc433a9c6c8396e14","@sp":"01f1e3fd588d5fec","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.03325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000009D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:05:56.7642090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7107"],"@tr":"9dd35c763af8c46ecb2e7199a3ce3fe9","@sp":"1c152cfac47183ca","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.710708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000009F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:05:59.7624140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1228"],"@tr":"74eeb1372b8e6445bd9610c1fe1c81c8","@sp":"ca6b2aca7f1e27c5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.12275,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000A1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:06:02.7593840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8372"],"@tr":"20ab979b3106f637945c2cf5650863d0","@sp":"fbeb3a0c60c409df","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.837209,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000A3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:06:05.7610380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9405"],"@tr":"3641fd1de81dc31df2d084e543a549f2","@sp":"81aae37a47c5163e","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.940459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000A5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:08.7619390Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2935"],"@tr":"062b54815c2dbf87cdea6caf2e6b6ed4","@sp":"0db8d8e5a4b157c2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.293541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000A7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:11.7607770Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9430"],"@tr":"0d50cabb93127adfb89c6d8e1cfbcc71","@sp":"561b1f7589cb7253","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.943042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000A9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:06:14.7602210Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1480"],"@tr":"cabfb40486a6e22e442276585cd21e4d","@sp":"40ebabc99fb018b0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.148,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000AB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:17.7595840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4489"],"@tr":"e7a2dc93f0770e4a6c4ee076df1a85ba","@sp":"0e13f6ce30c92ec0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.448917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000AD","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:06:20.7623930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5094"],"@tr":"fd3dbd31f8c4ae1eb027fc1e2fcc9bba","@sp":"b851071cd0c5b896","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.509375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000AF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:23.7619620Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5792"],"@tr":"8bd5211576eff8932881e217896f53b3","@sp":"e7cdccdfc105261b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.579208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000B1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:06:26.7613340Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7583"],"@tr":"6ba32fb682d7a34aec38d8f3841134ae","@sp":"31b2922dbd8e22bf","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.758291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000B3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:06:29.7598170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5481"],"@tr":"9ca2e7f5bb2bcbe6616997728099534d","@sp":"26089d7537036d01","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.548125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000B5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:32.7599880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1160"],"@tr":"99ed777f9a938a53a4d771950ea2b581","@sp":"fd2e79c0c492abae","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.116,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000B7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:35.7614960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9328"],"@tr":"1744461f0f63dd4c7bf8af712e18e928","@sp":"15f0befd523b2e40","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.932791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000B9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:38.7621090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9023"],"@tr":"d8b84987e0e75f0cb2591a2e8173944d","@sp":"455f7be76d8d21a1","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.90225,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000BB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:41.7687320Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.1812"],"@tr":"8b5d66f533c56136ee6cdc4473d26614","@sp":"e1ee5d8b79d40436","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.181167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000BD","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":75}
{"@t":"2025-08-16T06:06:44.7584830Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5848"],"@tr":"f6f2d63d9d33873ebe3ced60b9206896","@sp":"f15c5c6556d42218","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.584834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000BF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:06:47.7601030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2816"],"@tr":"6cd6d27c7140d4eb6b4aceb26e5cafb0","@sp":"f5cfa832b2fcdd12","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.281583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000C1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:06:50.7603790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8446"],"@tr":"caac70a567d2cdba67386b0a2107ed94","@sp":"4966f007bdcfdfed","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.844583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000C3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:06:53.7614450Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8395"],"@tr":"ad504bac784aeded6488d6af5d0bcdb1","@sp":"14a4ba4c18d54b4d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.839541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000C5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:06:56.7622170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7490"],"@tr":"e89b1f93d816f83eae4e21f286eb4575","@sp":"27fe269b3742b47b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.749,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000C7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:06:59.7579840Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6631"],"@tr":"bedf05ed33f95d00eecbf8043c3c790d","@sp":"356b20fbeca71046","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.663084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000C9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:07:02.7617100Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.6122"],"@tr":"7834cd8ce6e5e0859deea042bea3650d","@sp":"e38525efabc49536","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.612167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000CB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:05.7588050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.6468"],"@tr":"58f8007a7b7d390281d241e4f7eb9a18","@sp":"09ee51af90e69afe","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.646791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000CD","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:08.7580930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.1672"],"@tr":"1a9f8e722cef3f5f273b2053f5ce3c26","@sp":"38de2a8a171f5144","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.167208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000CF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:07:11.7610570Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.6506"],"@tr":"3a71bf664befd96792ad7d9cbc6d9955","@sp":"0f0111dd531eba69","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.650583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000D1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:14.7585250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1881"],"@tr":"4d2e79aabb52dd06b176e9d21abba15a","@sp":"36a0adbd30be2167","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.188083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000D3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:17.7627240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.7663"],"@tr":"9a69fce28e7173e55176e3eb322b168f","@sp":"5f6d3a357401646a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.766334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000D5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:20.7592530Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1770"],"@tr":"08ccdfbda5aa5b77a4b16575068cf477","@sp":"a278b169fd620963","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.176958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000D7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:23.7597950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3753"],"@tr":"c5b33381e68c7a70f6dad2f9ec162e48","@sp":"27737c046e3c264b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.375291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000D9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:26.7630850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.9913"],"@tr":"27c1edf4202a92d45670e658d3bc6b98","@sp":"8092e4be00d62231","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.991333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000DB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:29.7611230Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4756"],"@tr":"61a0d3c453cfa4b08c77e37d9118214e","@sp":"49e7e2f5baf966a9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.475625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000DD","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:32.7635460Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7258"],"@tr":"b075d409be772146dd06614dd827de11","@sp":"7a2bac73b45d9c48","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.725833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000DF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:35.7619850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9433"],"@tr":"58043c0dbf40d02936324d145cf52be6","@sp":"b7ed7ce41ae1d866","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.94325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000E1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T06:07:38.7617910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1331"],"@tr":"97b8a366f7474b3eeabb34b272c797c2","@sp":"411df5fb4a446100","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.133125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000E3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:07:41.7623420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1607"],"@tr":"4ca36254d221590cf1434c159a8b99eb","@sp":"7347cbfd98038ce7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.160709,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000E5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:44.7619360Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4493"],"@tr":"db1445c3a7d884cc8ebe074513c5f43d","@sp":"e1c799daeba4d5f0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.44925,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000E7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:47.7616550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5800"],"@tr":"37a2e0e4963abacc3e7fd80af152994f","@sp":"af7a1eeec97c56b9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.580042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000E9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:07:50.7621310Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7453"],"@tr":"5241dcdc494ae7010479a699ee18fe57","@sp":"4a5cb73bd8de35bc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.745333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000EB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:07:53.7620990Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0621"],"@tr":"dc7fe21817c33eef63013ce5cf9ccef9","@sp":"ffdb77a2beb4557b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.062083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000ED","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:07:56.7615370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0945"],"@tr":"9bebcd6c336f7e8a7e638a8988b737f7","@sp":"730fed9843972584","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.0945,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000EF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:07:59.7626230Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3690"],"@tr":"ecc5d41f8407d942ca0b63f8617e9bab","@sp":"aff42daa0fa4cde4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.369041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000F1","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:08:02.7604910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8554"],"@tr":"940c21307bf9f6ae6020f50bdf14be02","@sp":"cf2f9ff468d154c4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.855416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000F3","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:08:05.7608170Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8596"],"@tr":"4573da111d5ba4184fd06e2261c034e1","@sp":"170de527ccc20d2d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.859625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000F5","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:08.7617260Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5587"],"@tr":"488dfe7b18ba819fc06815b3dca586ed","@sp":"a0ad4659b5068f84","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.558667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000F7","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:11.7627720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9215"],"@tr":"8e1ef7e50ecb5b2be0bf249aa2c6f0e6","@sp":"c42e31385b180d40","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.9215,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000F9","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:14.7612290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7327"],"@tr":"dc219c371bc7e9b1309ec4c853a04a38","@sp":"4c7f6a174c4edc1d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.732667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000FB","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:17.7616820Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4468"],"@tr":"cc5160d8f712f5a2844df9285dd2be6a","@sp":"e36cc62a8d713c32","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.44675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000FD","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:20.7580640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2333"],"@tr":"9576ea675a38118e7917710f965898e8","@sp":"51a108e38bbc7b1d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.23325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:000000FF","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:23.7629620Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0430"],"@tr":"5abd5b03f5f6835cab7e754c43684097","@sp":"0d90456f7b84900b","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.043,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000101","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:26.7587670Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8585"],"@tr":"663f364900cd834cb6d8d35edcde991d","@sp":"847787ce5261f4b7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.858458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000103","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:08:29.7595320Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2862"],"@tr":"5a1a1c8749d15248c158cf6ea9a8a285","@sp":"a8a0899455e3418d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.286167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000105","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:08:32.7578090Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.2400"],"@tr":"b2eda11db29cd1a46e916a357a214466","@sp":"3278a556f9eb0e3a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.240042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000107","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:35.7609180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8603"],"@tr":"2484e343b159c986f952c4afd81e2580","@sp":"1d90ac10d472d453","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.860334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000109","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:08:38.7579800Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3258"],"@tr":"21cee426fb16845c8bb1d12999c1bf37","@sp":"2eb9399ad541f3b5","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.32575,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000010B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":78}
{"@t":"2025-08-16T06:08:41.7584760Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9453"],"@tr":"15c681d52aa5e77e929421387fecde19","@sp":"a0c153db73c2eb47","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.945292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000010D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:44.7644510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.4176"],"@tr":"4350db38d1ed1124fa58d7398b2cf9ad","@sp":"5e0a8bcc7560d779","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.417625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000010F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:08:47.7665020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.2640"],"@tr":"863da6ad7c17cd08cb701c75ec5a0212","@sp":"d210322d4a361101","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":7.264,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000111","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:50.7644020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.3197"],"@tr":"b16fed1753815577ad530eb804fc5571","@sp":"fd23c205b4249784","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.319667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000113","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:08:53.7600580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2266"],"@tr":"2809e55a8609b026ab973e93f3cd2b1d","@sp":"34d08bab7ef4997f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.226584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000115","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:08:56.7612120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.5460"],"@tr":"bc32d8216b564f8724c3a736a386cd4e","@sp":"db43dd21252f0551","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.545958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000117","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:08:59.7664440Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.9125"],"@tr":"364129fca847ee1afe36de4494fd587c","@sp":"d4944c3fe8e229e6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":6.912459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000119","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:09:02.7663640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.9880"],"@tr":"f5675ddff86048d6c7556eee62b3192f","@sp":"291bc42b52570072","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.988,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000011B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:05.7648250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.8798"],"@tr":"d36d4bd146ac9ab684811ba3af9398aa","@sp":"a6b39edf2fe50c47","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.879792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000011D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:08.7616780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8438"],"@tr":"0624a9ead7237337f7226d638a219723","@sp":"8df0b50922ef1873","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.84375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000011F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:11.7588150Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.0334"],"@tr":"e5ebe4d55ef9dbf3985b3e1b4677c1c9","@sp":"b38ec0932bc62407","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.033417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000121","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:14.7611410Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0543"],"@tr":"4d4b7e64ec3d0377deb9e31aa2c13b9e","@sp":"a4e4e2c2da93581f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.05425,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000123","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:09:17.7614680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.2767"],"@tr":"3fef1c92de7ba12463eb7d429d34b38c","@sp":"35282de632f84c40","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.276667,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000125","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:20.7639380Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.4369"],"@tr":"a9d1fbfe21bae3a44dc0d5cb3998cd41","@sp":"318e32db30c7c5a9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.436875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000127","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:23.7625470Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3893"],"@tr":"66db9b90bf93ad4990120c363e3362f2","@sp":"37e53fe4f020424a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.389292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000129","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:26.7638590Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.0758"],"@tr":"9a154d751167154b70b0520744c1f1c9","@sp":"9a04ac1b5da94d9c","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.075833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000012B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:29.7625220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9284"],"@tr":"6f2a8d0adafe119b59ad453387a5cdf3","@sp":"cd6df9b7a9ff5a50","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.928375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000012D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:09:32.7609540Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0413"],"@tr":"df3d0206bc1dcb6c9534a7c8a0f5fb3c","@sp":"2c83770ce195e9ad","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.041333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000012F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:35.7653060Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2193"],"@tr":"63d3de7890c3c60d40d2b71a367e2063","@sp":"d0c5c179ca5f98cc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.219333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000131","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:38.7649790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.4944"],"@tr":"8d0fc4c6f76139b7623c10aa1db99a58","@sp":"5f089fc7bf4b62a6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":5.494416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000133","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:41.7629050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.2634"],"@tr":"fd0d834fcf2fb1c695eae25e35f93e2f","@sp":"c7e44487f35117d8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.263417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000135","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:09:44.7623190Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4577"],"@tr":"0ba99cedbbb2a044b6eb0b3c5e6a2ad4","@sp":"751fb2eb778457f6","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.457709,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000137","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:47.7594810Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.4127"],"@tr":"745db367d002480c41ba23712a919d19","@sp":"ac3bad4d61d8d51f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.412666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000139","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:09:50.7615430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8435"],"@tr":"0e730959dfc504ffc31675b351456348","@sp":"303074712909a0a9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.843542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000013B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:53.7642930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3964"],"@tr":"8dcccafa17071df30d9aa8d082c37f50","@sp":"ebbde0b36e776327","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.396417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000013D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:09:56.7627270Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8958"],"@tr":"c3d4c75610c391efeb488bde18b15a42","@sp":"e95f57611416da65","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.89575,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000013F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:09:59.7634100Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8951"],"@tr":"3469df649264f08791228189cd63101c","@sp":"5976452935777936","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.895125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000141","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:10:02.7629020Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9088"],"@tr":"1e636882546abff99a51440871aa41f6","@sp":"a7daf31aea801964","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.908792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000143","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:10:05.7636010Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9947"],"@tr":"5358a4483b10b118f3d12de67bc6a1db","@sp":"b4ba2f825f3dfa57","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.994666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000145","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:08.7600290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5215"],"@tr":"cb998029b51440efe971550a7f15f1be","@sp":"852160fbcf1bf932","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.5215,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000147","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:11.7601510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9980"],"@tr":"88098352b27c14e0a431323141c14282","@sp":"d8357eda816a43c0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.998,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000149","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:14.7632700Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3778"],"@tr":"df5aa5e0a2c932b093dd5bafcd09174f","@sp":"b323bb9e1eb1d235","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.377834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000014B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:17.7631680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1889"],"@tr":"bcf70e402f587a2f984186a6554f603e","@sp":"87245b6c2a660dc8","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.188917,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000014D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:10:20.7619080Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1813"],"@tr":"387a37b975f3415e6e99307ea86794e6","@sp":"f014b7391551d791","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.181333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000014F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:10:23.7626430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4573"],"@tr":"dd42afd31ce89e61e48b3bd20bcfe73e","@sp":"1989152a4b91e48d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.457333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000151","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:26.7632780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0873"],"@tr":"3876f8fd349a2de664e659f9585963a7","@sp":"74ade85b1c5ededb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.087292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000153","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:29.7624330Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3685"],"@tr":"9c1bc7115ef6247dda87d8da6e772160","@sp":"3eebc54ed9c2290a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.3685,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000155","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:32.7630780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.8535"],"@tr":"693b016a9b24a015527d8ac42ef14823","@sp":"3d4c541f6da60f01","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.853542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000157","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:35.7616780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.7551"],"@tr":"19bdf3523691e43b51abf695d1c82c27","@sp":"a5a0106037602e60","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.755125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000159","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:38.7629750Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0801"],"@tr":"f1010c3ee0377e40eb41097ed8c4f811","@sp":"79def89d2a5f87e2","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.080083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000015B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":77}
{"@t":"2025-08-16T06:10:41.7633960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9873"],"@tr":"6ed8a70e1dd056107911effe0984e033","@sp":"893c9a3fa08d582f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.987292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000015D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:44.7631480Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.8979"],"@tr":"5e18e73237ecfc7525dff7af861a1431","@sp":"1021d4149339eadc","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.897916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000015F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:47.7633550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9070"],"@tr":"b4671d0f319f7b0d853ace4ad1926c7f","@sp":"354a3609760ab7eb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.907042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000161","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:10:50.7632620Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6510"],"@tr":"9aae697e76d07e33d39b28fdccb05870","@sp":"21ba51f74490e532","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.651042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000163","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:53.7618070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.5620"],"@tr":"f1804346d95c5e87e3af86a819158e95","@sp":"b9e8b66160a19bcb","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.561959,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000165","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:56.7650970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.3355"],"@tr":"9369405676b5e64d36172460cfdb6a27","@sp":"9bfcca937bf50d64","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":4.335542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000167","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:10:59.7643000Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3560"],"@tr":"f5a01b4e196a3e3cfc3b27a6c78e998c","@sp":"2c57a8eade02e1c4","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.356,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000169","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:02.7619110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0951"],"@tr":"42b322dc5d0f1700424bd1f0a7c70e37","@sp":"05df35ef7bdcd20f","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.095084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000016B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:05.7622460Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0507"],"@tr":"59ac5c8a89cccab556c028ceeb469906","@sp":"7840901db7c17001","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.050708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000016D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:08.7625550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.1634"],"@tr":"bee0487edd6bbc67025276a8e7d80fd2","@sp":"9e2dedb09a06c051","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.163416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000016F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":81}
{"@t":"2025-08-16T06:11:11.7634230Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3355"],"@tr":"eed3357251648a9b5e10e0a727fce7c4","@sp":"1d3fc5023b5d4be9","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.335542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000171","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:11:14.7638210Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.9510"],"@tr":"5db2cbb5fb854ccf5cba4348ff5762a7","@sp":"a2d8f1e94cd48276","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.951042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000173","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:11:17.7624520Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3863"],"@tr":"177bdd5a25f92587c95b60f9980d6937","@sp":"e0f2da93dc6b94a7","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.386334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000175","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:11:20.7627350Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3954"],"@tr":"846932190e626f5b65c369f20b48ad4e","@sp":"463ad0dd7ad7446d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.395375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000177","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":81}
{"@t":"2025-08-16T06:11:23.7630930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.7351"],"@tr":"8a2767592698c3cd916891b429277ee8","@sp":"8aa38f0dbcc96294","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.735125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000179","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:26.7611730Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.9785"],"@tr":"42f668bd55028a232e11f5bcb7414df0","@sp":"47d06374ec795b89","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.978459,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000017B","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:29.7653690Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.0048"],"@tr":"8a6b1c53cce615649614dd71584b1632","@sp":"90f10cc7da37faf0","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.00475,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000017D","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:11:32.7650820Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.3391"],"@tr":"b56629cc002cd3e46d47e7616ec7cfee","@sp":"8df87d0f30296faf","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":3.339083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:0000017F","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:35.7636240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.4602"],"@tr":"c771872def5b1e256859dcf115b1440e","@sp":"faa531d1b3a0dfa3","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.460208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000181","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:38.7618220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.0110"],"@tr":"e8eb058d1f4121818c920199cdc98a70","@sp":"3f26b171d6d3405d","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":2.011041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000183","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":76}
{"@t":"2025-08-16T06:11:41.7611770Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.5045"],"@tr":"8174054faf134a4aa55bf431564a5e38","@sp":"81812cb722e4f05a","RequestMethod":"POST","RequestPath":"/hangfire/stats","StatusCode":200,"Elapsed":1.504542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNESH52HRMDK:00000185","ConnectionId":"0HNESH52HRMDK","MachineName":"Mac","ThreadId":80}
{"@t":"2025-08-16T06:11:42.9435880Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e caught stopping signal..."],"State":"Server mac:6099:cfcbcc0e caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":72}
{"@t":"2025-08-16T06:11:42.9463940Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":72}
{"@t":"2025-08-16T06:11:42.9478980Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e All dispatchers stopped"],"State":"Server mac:6099:cfcbcc0e All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:11:42.9539050Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e successfully reported itself as stopped in 1.531 ms"],"State":"Server mac:6099:cfcbcc0e successfully reported itself as stopped in 1.531 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:11:42.9540600Z","@mt":"{State:l}","@r":["Server mac:6099:cfcbcc0e has been stopped in total 9.6245 ms"],"State":"Server mac:6099:cfcbcc0e has been stopped in total 9.6245 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:13:45.5442490Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"19","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.6449220Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.6472600Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.6781860Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.6842840Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8683130Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8727420Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8728030Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8741300Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8742280Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8743110Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8743450Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8743730Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8744180Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8770490Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8771020Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8771310Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:13:45.8835200Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 successfully announced in 4.7449 ms"],"State":"Server mac:10587:588bf813 successfully announced in 4.7449 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:13:45.8843100Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:10587:588bf813 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:13:45.8868370Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 all the dispatchers started"],"State":"Server mac:10587:588bf813 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:14:08.2742550Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2eff910a6faf318179637045a699a9b0","@sp":"f2fdad063d645c0f","elapsed":"2","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c02e7990-8ad0-48a8-8b26-4dda39e0d582","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHGAPF5A8:0000000F","RequestPath":"/api/Auth/login","ConnectionId":"0HNESHGAPF5A8","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:14:08.3070790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["97.5403"],"@tr":"2eff910a6faf318179637045a699a9b0","@sp":"f2fdad063d645c0f","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":97.540334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"c02e7990-8ad0-48a8-8b26-4dda39e0d582","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHGAPF5A8:0000000F","ConnectionId":"0HNESHGAPF5A8","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:15:01.1701970Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:16:55.3828060Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 caught stopping signal..."],"State":"Server mac:10587:588bf813 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T06:16:55.3872160Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T06:16:55.3883350Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 All dispatchers stopped"],"State":"Server mac:10587:588bf813 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:16:55.3948180Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 successfully reported itself as stopped in 4.8828 ms"],"State":"Server mac:10587:588bf813 successfully reported itself as stopped in 4.8828 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:16:55.3949110Z","@mt":"{State:l}","@r":["Server mac:10587:588bf813 has been stopped in total 10.2096 ms"],"State":"Server mac:10587:588bf813 has been stopped in total 10.2096 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:18:07.1006790Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"25","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.2252040Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"10","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.2273350Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.2709950Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.2815090Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5914970Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5955270Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5955820Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5969700Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5970720Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5971460Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5972050Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5972380Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.5972900Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.6039330Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.6040160Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.6040510Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:18:07.6218270Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a successfully announced in 20.5152 ms"],"State":"Server mac:11416:9d2f788a successfully announced in 20.5152 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:18:07.6225860Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:11416:9d2f788a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:18:07.6250650Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a all the dispatchers started"],"State":"Server mac:11416:9d2f788a all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:18:37.9520290Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"0e812a0796bd94192593a44cd14b6d40","@sp":"60bccd583c8cbe2f","elapsed":"2","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"dbeeb423-e293-48dd-a9a4-c18600fdf3d5","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHIQOI5NG:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESHIQOI5NG","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:18:38.0185430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["130.4943"],"@tr":"0e812a0796bd94192593a44cd14b6d40","@sp":"60bccd583c8cbe2f","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":130.494334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"dbeeb423-e293-48dd-a9a4-c18600fdf3d5","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHIQOI5NG:00000001","ConnectionId":"0HNESHIQOI5NG","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:20:47.1691030Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a caught stopping signal..."],"State":"Server mac:11416:9d2f788a caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T06:20:47.1708420Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T06:20:47.1730260Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a All dispatchers stopped"],"State":"Server mac:11416:9d2f788a All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:20:47.1779420Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a successfully reported itself as stopped in 2.6222 ms"],"State":"Server mac:11416:9d2f788a successfully reported itself as stopped in 2.6222 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:20:47.1783300Z","@mt":"{State:l}","@r":["Server mac:11416:9d2f788a has been stopped in total 7.7756 ms"],"State":"Server mac:11416:9d2f788a has been stopped in total 7.7756 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:21:54.0337230Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.1371100Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.1394580Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.1662280Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.1725300Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3428950Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3471890Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3472470Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3486330Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3487340Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3488070Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3488370Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3488630Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3489060Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3514550Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3515160Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3515500Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:21:54.3572820Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c successfully announced in 4.4737 ms"],"State":"Server mac:12569:4fa8742c successfully announced in 4.4737 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:21:54.3582320Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:12569:4fa8742c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:21:54.3599700Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c all the dispatchers started"],"State":"Server mac:12569:4fa8742c all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:21:59.4967910Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"070c3e890b95a04348b80fe4906c9f6c","@sp":"449ce82582ecd9f5","elapsed":"2","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"18d47e1d-a096-40c4-8fc7-4e294fce34b8","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHKQFF9T6:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESHKQFF9T6","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:21:59.5226230Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["73.7981"],"@tr":"070c3e890b95a04348b80fe4906c9f6c","@sp":"449ce82582ecd9f5","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":73.798083,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"18d47e1d-a096-40c4-8fc7-4e294fce34b8","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHKQFF9T6:00000001","ConnectionId":"0HNESHKQFF9T6","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:22:57.5506810Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c caught stopping signal..."],"State":"Server mac:12569:4fa8742c caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T06:22:57.5515950Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T06:22:57.5526460Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c All dispatchers stopped"],"State":"Server mac:12569:4fa8742c All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:22:57.5571060Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c successfully reported itself as stopped in 3.119 ms"],"State":"Server mac:12569:4fa8742c successfully reported itself as stopped in 3.119 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:22:57.5573560Z","@mt":"{State:l}","@r":["Server mac:12569:4fa8742c has been stopped in total 5.8967 ms"],"State":"Server mac:12569:4fa8742c has been stopped in total 5.8967 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:23:14.7809470Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:14.8810010Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:14.8832810Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:14.9115370Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:14.9171030Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0759220Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0800810Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0801420Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0814670Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0815710Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0816580Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0816950Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0817220Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0817660Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0844490Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0845120Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0845520Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:23:15.0909980Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 successfully announced in 5.192 ms"],"State":"Server mac:13283:f1c0cb44 successfully announced in 5.192 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:23:15.0918010Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:13283:f1c0cb44 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:23:15.0939440Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 all the dispatchers started"],"State":"Server mac:13283:f1c0cb44 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:23:29.1705360Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"af86c9055e7d7a08e4d00d72181ac468","@sp":"cea4fbd21630388e","elapsed":"2","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"0b9d5ecf-1349-498b-902d-30606811f35b","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHLL6NBIG:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESHLL6NBIG","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T06:23:29.1987870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["78.4699"],"@tr":"af86c9055e7d7a08e4d00d72181ac468","@sp":"cea4fbd21630388e","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":78.469875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"0b9d5ecf-1349-498b-902d-30606811f35b","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESHLL6NBIG:00000001","ConnectionId":"0HNESHLL6NBIG","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T06:28:20.6993360Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 caught stopping signal..."],"State":"Server mac:13283:f1c0cb44 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":59}
{"@t":"2025-08-16T06:28:20.7025540Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":59}
{"@t":"2025-08-16T06:28:20.7046000Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 All dispatchers stopped"],"State":"Server mac:13283:f1c0cb44 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:28:20.7099260Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 successfully reported itself as stopped in 3.0577 ms"],"State":"Server mac:13283:f1c0cb44 successfully reported itself as stopped in 3.0577 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:28:20.7105070Z","@mt":"{State:l}","@r":["Server mac:13283:f1c0cb44 has been stopped in total 8.7755 ms"],"State":"Server mac:13283:f1c0cb44 has been stopped in total 8.7755 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:45:07.4871410Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.5859000Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.5881150Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.6176890Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.6227710Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7879490Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7922260Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7922870Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7936620Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7939400Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7940460Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7940930Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7941210Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7941700Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7972130Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7972790Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.7973100Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:45:07.8033700Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 successfully announced in 4.8547 ms"],"State":"Server mac:14702:09aa8f27 successfully announced in 4.8547 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:45:07.8041220Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:14702:09aa8f27 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:45:07.8064510Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 all the dispatchers started"],"State":"Server mac:14702:09aa8f27 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:45:07.9032650Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:45:42.9871920Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b5e11e0ba6405bc331da90365acf3eff","@sp":"21583a14410930fb","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"239aafce-95f2-4c33-bf02-e383848f445c","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI1V3QT5Q:0000000F","RequestPath":"/api/Auth/login","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:45:43.0187040Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["92.6163"],"@tr":"b5e11e0ba6405bc331da90365acf3eff","@sp":"21583a14410930fb","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":92.61625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"239aafce-95f2-4c33-bf02-e383848f445c","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI1V3QT5Q:0000000F","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:46:32.0716940Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"173e616e9c13a42e97d278729be5b3b2","@sp":"91c6f634fdc88613","elapsed":"1","parameters":"@__registrationDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u\n    WHERE u.\"Username\" = @__registrationDto_Username_0)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000011","RequestPath":"/api/Auth/register","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T06:46:32.1133950Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"173e616e9c13a42e97d278729be5b3b2","@sp":"91c6f634fdc88613","elapsed":"1","parameters":"@p0='?', @p1='?', @p2='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Users\" (\"PasswordHash\", \"Role\", \"Username\")\nVALUES (@p0, @p1, @p2)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000011","RequestPath":"/api/Auth/register","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T06:46:32.1260610Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["72.2145"],"@tr":"173e616e9c13a42e97d278729be5b3b2","@sp":"91c6f634fdc88613","RequestMethod":"POST","RequestPath":"/api/Auth/register","StatusCode":201,"Elapsed":72.214542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000011","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T06:46:43.1733160Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"d2905512a22186169245a58764ac9d39","@sp":"2c16b969608c2eb7","elapsed":"1","parameters":"@__registrationDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u\n    WHERE u.\"Username\" = @__registrationDto_Username_0)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000013","RequestPath":"/api/Auth/register","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T06:46:43.1772040Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"d2905512a22186169245a58764ac9d39","@sp":"2c16b969608c2eb7","elapsed":"1","parameters":"@p0='?', @p1='?', @p2='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Users\" (\"PasswordHash\", \"Role\", \"Username\")\nVALUES (@p0, @p1, @p2)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000013","RequestPath":"/api/Auth/register","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T06:46:43.1791180Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["11.6082"],"@tr":"d2905512a22186169245a58764ac9d39","@sp":"2c16b969608c2eb7","RequestMethod":"POST","RequestPath":"/api/Auth/register","StatusCode":201,"Elapsed":11.608167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"a74f4be1-bc26-401d-9299-f7fdf0e2edb2","ActionName":"K8Intel.Controllers.AuthController.Register (K8intel)","RequestId":"0HNESI1V3QT5Q:00000013","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T06:48:10.9649340Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b0cccdedaeebdc51ea3d6e5dc1b629a4","@sp":"655e6b6c63ab6514","elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Clusters\" AS c","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5b5670cc-ff6d-4a7e-90ef-9038edd1bf29","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESI1V3QT5Q:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T06:48:11.0498300Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b0cccdedaeebdc51ea3d6e5dc1b629a4","@sp":"655e6b6c63ab6514","elapsed":"69","parameters":"@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND\nFROM \"Clusters\" AS c\nORDER BY c.\"Name\"\nLIMIT @__p_1 OFFSET @__p_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5b5670cc-ff6d-4a7e-90ef-9038edd1bf29","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESI1V3QT5Q:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T06:48:11.0586390Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["163.5650"],"@tr":"b0cccdedaeebdc51ea3d6e5dc1b629a4","@sp":"655e6b6c63ab6514","RequestMethod":"GET","RequestPath":"/api/Clusters","StatusCode":200,"Elapsed":163.565,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"5b5670cc-ff6d-4a7e-90ef-9038edd1bf29","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESI1V3QT5Q:00000015","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T06:48:23.9791820Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"c2c279849c88908388c8e51e6af9d458","@sp":"6330cddc199f9373","CreateDto":{"Name":"cluster1","ApiEndpoint":"enpoint123","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"362bb397-2083-40c1-b527-84874e5b2f80","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI1V3QT5Q:00000017","RequestPath":"/api/Clusters","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":52}
{"@t":"2025-08-16T06:48:24.0353610Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"c2c279849c88908388c8e51e6af9d458","@sp":"6330cddc199f9373","elapsed":"24","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"362bb397-2083-40c1-b527-84874e5b2f80","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI1V3QT5Q:00000017","RequestPath":"/api/Clusters","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":52}
{"@t":"2025-08-16T06:48:24.0421390Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["70.0860"],"@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method247(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method150(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"c2c279849c88908388c8e51e6af9d458","@sp":"6330cddc199f9373","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":500,"Elapsed":70.086,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"362bb397-2083-40c1-b527-84874e5b2f80","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI1V3QT5Q:00000017","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":52}
{"@t":"2025-08-16T06:48:24.0610370Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method247(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method150(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28","@tr":"c2c279849c88908388c8e51e6af9d458","@sp":"6330cddc199f9373","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESI1V3QT5Q:00000017","RequestPath":"/api/Clusters","ConnectionId":"0HNESI1V3QT5Q","MachineName":"Mac","ThreadId":52}
{"@t":"2025-08-16T06:50:57.0050430Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 caught stopping signal..."],"State":"Server mac:14702:09aa8f27 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:50:57.0087720Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":62}
{"@t":"2025-08-16T06:50:57.0149020Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 All dispatchers stopped"],"State":"Server mac:14702:09aa8f27 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:50:57.0277950Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 successfully reported itself as stopped in 11.1077 ms"],"State":"Server mac:14702:09aa8f27 successfully reported itself as stopped in 11.1077 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:50:57.0279050Z","@mt":"{State:l}","@r":["Server mac:14702:09aa8f27 has been stopped in total 19.4421 ms"],"State":"Server mac:14702:09aa8f27 has been stopped in total 19.4421 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:53:00.9293010Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"40","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.0821360Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"41","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.0846880Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.1303860Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.1511300Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5410550Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5545480Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5546450Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5558410Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5559390Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5560200Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5560610Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5560920Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5561420Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5602320Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5603000Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5603310Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":8}
{"@t":"2025-08-16T06:53:01.5686810Z","@mt":"{State:l}","@r":["Server mac:15056:cf17caba successfully announced in 8.5589 ms"],"State":"Server mac:15056:cf17caba successfully announced in 8.5589 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:53:01.5698520Z","@mt":"{State:l}","@r":["Server mac:15056:cf17caba is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:15056:cf17caba is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:53:01.5716600Z","@mt":"{State:l}","@r":["Server mac:15056:cf17caba all the dispatchers started"],"State":"Server mac:15056:cf17caba all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T06:53:28.0099080Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"3bb960500329a2eee6644c978a77c411","@sp":"ce29f6ae6b2c2f1f","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7Q:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESI6D95A7Q","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T06:53:28.0716700Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["121.8269"],"@tr":"3bb960500329a2eee6644c978a77c411","@sp":"ce29f6ae6b2c2f1f","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":121.826875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7Q:00000001","ConnectionId":"0HNESI6D95A7Q","MachineName":"Mac","ThreadId":42}
{"@t":"2025-08-16T06:53:47.7502990Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"922c760d6562221e69f62d9499d56df4","@sp":"cbff0654c19caefe","CreateDto":{"Name":"cluster1","ApiEndpoint":"enpoint123","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:53:48.8053530Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"922c760d6562221e69f62d9499d56df4","@sp":"cbff0654c19caefe","elapsed":"924","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:53:49.0209780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1336.9289"],"@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"922c760d6562221e69f62d9499d56df4","@sp":"cbff0654c19caefe","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":500,"Elapsed":1336.928875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000001","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:53:49.3216230Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28","@tr":"922c760d6562221e69f62d9499d56df4","@sp":"cbff0654c19caefe","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESI6D95A7S:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:54:02.3945880Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"8e9ecd0ef58ca16909f122a3c5f1116c","@sp":"e95a3975fa7ae859","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7S:00000013","RequestPath":"/api/Auth/login","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:54:02.3974710Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.9853"],"@tr":"8e9ecd0ef58ca16909f122a3c5f1116c","@sp":"e95a3975fa7ae859","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":7.985291,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7S:00000013","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:54:12.4464460Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"b90097e45d7904c840a1421f513faae9","@sp":"b0e2bc1edbf0d893","CreateDto":{"Name":"safd","ApiEndpoint":"safd","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T06:54:12.4529590Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b90097e45d7904c840a1421f513faae9","@sp":"b0e2bc1edbf0d893","elapsed":"3","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:12.4542660Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.9602"],"@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"b90097e45d7904c840a1421f513faae9","@sp":"b0e2bc1edbf0d893","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":500,"Elapsed":8.960208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000015","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:12.4558220Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28","@tr":"b90097e45d7904c840a1421f513faae9","@sp":"b0e2bc1edbf0d893","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESI6D95A7S:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:29.0564410Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"fa3b827ca930e5459be3ae6b05fb9128","@sp":"60b38cf450fd335a","elapsed":"0","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7S:00000017","RequestPath":"/api/Auth/login","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:29.0575790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.6250"],"@tr":"fa3b827ca930e5459be3ae6b05fb9128","@sp":"60b38cf450fd335a","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":4.625041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"96af3ef9-0e86-4770-8a01-350128a8ee1e","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESI6D95A7S:00000017","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:32.7178110Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"2a0058dafa101f2b19c8680499bdeaf2","@sp":"22fef766a6e7f24f","CreateDto":{"Name":"safd","ApiEndpoint":"safd","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000019","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:54:32.7198820Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2a0058dafa101f2b19c8680499bdeaf2","@sp":"22fef766a6e7f24f","elapsed":"1","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000019","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:54:32.7207930Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.0412"],"@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"2a0058dafa101f2b19c8680499bdeaf2","@sp":"22fef766a6e7f24f","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":500,"Elapsed":4.041167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"2f5b24b9-14da-4882-ba42-cf570a0b770b","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESI6D95A7S:00000019","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:54:32.7221090Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method180(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 39\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method79(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28","@tr":"2a0058dafa101f2b19c8680499bdeaf2","@sp":"22fef766a6e7f24f","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESI6D95A7S:00000019","RequestPath":"/api/Clusters","ConnectionId":"0HNESI6D95A7S","MachineName":"Mac","ThreadId":45}
{"@t":"2025-08-16T06:59:35.0318620Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.1366540Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.1390510Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.1704390Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.1765580Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3338810Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3383000Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3383690Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3396570Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3397510Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3398250Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3398570Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3398850Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3399280Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3423620Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3424060Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3424370Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T06:59:35.3489670Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 successfully announced in 5.2929 ms"],"State":"Server mac:15666:90e50310 successfully announced in 5.2929 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:59:35.3498110Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:15666:90e50310 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T06:59:35.3524410Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 all the dispatchers started"],"State":"Server mac:15666:90e50310 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:00:02.7101940Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"7a5c391a49d2173e3ff220c1d87b0397","@sp":"527b3e7a01b9b7a2","elapsed":"2","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"01064310-47be-4d5e-9e1c-f9eeb41f19a1","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESIA03VMQ8:00000011","RequestPath":"/api/Auth/login","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:00:02.7414160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["98.3267"],"@tr":"7a5c391a49d2173e3ff220c1d87b0397","@sp":"527b3e7a01b9b7a2","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":98.326708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"01064310-47be-4d5e-9e1c-f9eeb41f19a1","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESIA03VMQ8:00000011","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:00:05.4849390Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:00:22.4501390Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"059f3213739876e605854d70e0b28fbf","@sp":"b58dcc1182b3f181","CreateDto":{"Name":"fdsa","ApiEndpoint":"fdsaf","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"b5e85215-8f9e-4d63-b67c-b1b97db426b0","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESIA03VMQ8:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T07:00:22.4954890Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"059f3213739876e605854d70e0b28fbf","@sp":"b58dcc1182b3f181","elapsed":"3","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"b5e85215-8f9e-4d63-b67c-b1b97db426b0","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESIA03VMQ8:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T07:00:22.5028970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["105.1864"],"@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method197(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 42\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method96(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"059f3213739876e605854d70e0b28fbf","@sp":"b58dcc1182b3f181","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":500,"Elapsed":105.186417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"b5e85215-8f9e-4d63-b67c-b1b97db426b0","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESIA03VMQ8:00000013","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T07:00:22.5064840Z","@mt":"An unhandled exception has occurred.","@l":"Error","@x":"System.ArgumentException: K8Intel.Dtos.ClusterDto needs to have a constructor with 0 args or only optional args. Validate your configuration for details. (Parameter 'type')\n   at lambda_method197(Closure, Object, ClusterDto, ResolutionContext)\n   at AutoMapper.Mapper.MapCore[TSource,TDestination](TSource source, TDestination destination, ResolutionContext context, Type sourceType, Type destinationType, MemberMap memberMap)\n   at AutoMapper.Mapper.Map[TSource,TDestination](TSource source, TDestination destination)\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at K8Intel.Services.ClusterService.CreateClusterAsync(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Services/ClusterService.cs:line 42\n   at K8Intel.Controllers.ClustersController.CreateCluster(CreateClusterDto createDto) in /Users/neerajmac/Documents/Project/K8intel/Controllers/ClustersController.cs:line 66\n   at lambda_method96(Closure, Object)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\n   at K8Intel.Middleware.GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in /Users/neerajmac/Documents/Project/K8intel/Middleware/GlobalExceptionHandlerMiddleware.cs:line 28","@tr":"059f3213739876e605854d70e0b28fbf","@sp":"b58dcc1182b3f181","SourceContext":"K8Intel.Middleware.GlobalExceptionHandlerMiddleware","RequestId":"0HNESIA03VMQ8:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESIA03VMQ8","MachineName":"Mac","ThreadId":14}
{"@t":"2025-08-16T07:03:02.5540650Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 caught stopping signal..."],"State":"Server mac:15666:90e50310 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:03:02.5561350Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:03:02.5573320Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 All dispatchers stopped"],"State":"Server mac:15666:90e50310 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:03:02.5631000Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 successfully reported itself as stopped in 4.2992 ms"],"State":"Server mac:15666:90e50310 successfully reported itself as stopped in 4.2992 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:03:02.5633640Z","@mt":"{State:l}","@r":["Server mac:15666:90e50310 has been stopped in total 7.5598 ms"],"State":"Server mac:15666:90e50310 has been stopped in total 7.5598 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:05:11.3300600Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.4373460Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.4395710Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.4695980Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.4745780Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6508240Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6550440Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6551040Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6565530Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6566590Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6567370Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6567710Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6567980Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6568420Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6598210Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6598780Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6599080Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:05:11.6657220Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 successfully announced in 4.6948 ms"],"State":"Server mac:16011:c3acb761 successfully announced in 4.6948 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:05:11.6665110Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:16011:c3acb761 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:05:11.6674720Z","@mt":"{State:l}","@r":["1 servers were removed due to timeout"],"State":"1 servers were removed due to timeout","SourceContext":"Hangfire.Server.ServerWatchdog","MachineName":"Mac","ThreadId":17}
{"@t":"2025-08-16T07:05:11.6688110Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 all the dispatchers started"],"State":"Server mac:16011:c3acb761 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:05:28.1400000Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"62e1fbb8d09492e3631c2cf19b198e6c","@sp":"19907159daaeb1bf","elapsed":"3","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0A:00000011","RequestPath":"/api/Auth/login","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:05:28.1768330Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["105.2486"],"@tr":"62e1fbb8d09492e3631c2cf19b198e6c","@sp":"19907159daaeb1bf","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":105.248625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0A:00000011","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:05:47.3449710Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"8cd582b3de7769895609d1da8a71d0d1","@sp":"23c44fa3eedf44ea","CreateDto":{"Name":"sdaf","ApiEndpoint":"wre","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0A:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:05:47.4597590Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"8cd582b3de7769895609d1da8a71d0d1","@sp":"23c44fa3eedf44ea","elapsed":"31","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0A:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:05:47.4673410Z","@mt":"Created new cluster with id: {Id}","@tr":"8cd582b3de7769895609d1da8a71d0d1","@sp":"23c44fa3eedf44ea","Id":6,"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0A:00000013","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:05:47.4725850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["181.4881"],"@tr":"8cd582b3de7769895609d1da8a71d0d1","@sp":"23c44fa3eedf44ea","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":201,"Elapsed":181.488125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0A:00000013","ConnectionId":"0HNESID0JET0A","MachineName":"Mac","ThreadId":13}
{"@t":"2025-08-16T07:07:14.0588420Z","@mt":"CreateCluster endpoint called with data: {@CreateDto}","@tr":"ae0d461e31263f5506be6d87d3149faf","@sp":"8ed1f29601e16b35","CreateDto":{"Name":"WiproCluster","ApiEndpoint":"clusterEndpoint","$type":"CreateClusterDto"},"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0C:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0C","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:14.3666900Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"ae0d461e31263f5506be6d87d3149faf","@sp":"8ed1f29601e16b35","elapsed":"299","parameters":"@p0='?', @p1='?', @p2='?' (DbType = DateTime), @p3='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Clusters\" (\"AgentApiKey\", \"ApiEndpoint\", \"LastAgentContactAt\", \"Name\")\nVALUES (@p0, @p1, @p2, @p3)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0C:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0C","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:14.3693900Z","@mt":"Created new cluster with id: {Id}","@tr":"ae0d461e31263f5506be6d87d3149faf","@sp":"8ed1f29601e16b35","Id":7,"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0C:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0C","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:14.3788790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["324.7016"],"@tr":"ae0d461e31263f5506be6d87d3149faf","@sp":"8ed1f29601e16b35","RequestMethod":"POST","RequestPath":"/api/Clusters","StatusCode":201,"Elapsed":324.701583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"f6be7966-e499-4956-b784-77e0a8465960","ActionName":"K8Intel.Controllers.ClustersController.CreateCluster (K8intel)","RequestId":"0HNESID0JET0C:00000001","ConnectionId":"0HNESID0JET0C","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:30.9786080Z","@mt":"GetCluster endpoint called with id: {Id}","@tr":"423c409202d6390fd1918a5bb1d3507e","@sp":"8620ccc98ebb237a","Id":7,"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"9f2629b0-6bef-425e-8b2c-957c01535cd7","ActionName":"K8Intel.Controllers.ClustersController.GetCluster (K8intel)","RequestId":"0HNESID0JET0E:00000001","RequestPath":"/api/Clusters/7","ConnectionId":"0HNESID0JET0E","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:31.1817470Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"423c409202d6390fd1918a5bb1d3507e","@sp":"8620ccc98ebb237a","elapsed":"22","parameters":"@__id_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND AS \"HealthStatus\"\nFROM \"Clusters\" AS c\nWHERE c.\"Id\" = @__id_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"9f2629b0-6bef-425e-8b2c-957c01535cd7","ActionName":"K8Intel.Controllers.ClustersController.GetCluster (K8intel)","RequestId":"0HNESID0JET0E:00000001","RequestPath":"/api/Clusters/7","ConnectionId":"0HNESID0JET0E","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:31.1821200Z","@mt":"Returning cluster with id: {Id}","@tr":"423c409202d6390fd1918a5bb1d3507e","@sp":"8620ccc98ebb237a","Id":7,"SourceContext":"K8Intel.Controllers.ClustersController","ActionId":"9f2629b0-6bef-425e-8b2c-957c01535cd7","ActionName":"K8Intel.Controllers.ClustersController.GetCluster (K8intel)","RequestId":"0HNESID0JET0E:00000001","RequestPath":"/api/Clusters/7","ConnectionId":"0HNESID0JET0E","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:31.1823670Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["254.4825"],"@tr":"423c409202d6390fd1918a5bb1d3507e","@sp":"8620ccc98ebb237a","RequestMethod":"GET","RequestPath":"/api/Clusters/7","StatusCode":200,"Elapsed":254.482458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"9f2629b0-6bef-425e-8b2c-957c01535cd7","ActionName":"K8Intel.Controllers.ClustersController.GetCluster (K8intel)","RequestId":"0HNESID0JET0E:00000001","ConnectionId":"0HNESID0JET0E","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:07:37.0266290Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"7b6240b690c44053196beb7394111679","@sp":"6bf38bc3ac1eee6f","elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Clusters\" AS c","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET0G:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0G","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T07:07:37.0366750Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"7b6240b690c44053196beb7394111679","@sp":"6bf38bc3ac1eee6f","elapsed":"5","parameters":"@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND AS \"HealthStatus\"\nFROM \"Clusters\" AS c\nORDER BY c.\"Name\"\nLIMIT @__p_1 OFFSET @__p_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET0G:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET0G","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T07:07:37.0441050Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["71.4958"],"@tr":"7b6240b690c44053196beb7394111679","@sp":"6bf38bc3ac1eee6f","RequestMethod":"GET","RequestPath":"/api/Clusters","StatusCode":200,"Elapsed":71.495833,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET0G:00000001","ConnectionId":"0HNESID0JET0G","MachineName":"Mac","ThreadId":48}
{"@t":"2025-08-16T07:08:05.5026060Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"01884eb42fdf7c10621b3d20a1867179","@sp":"e396d71452b22f86","elapsed":"24","parameters":"@__clusterId_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Alerts\" AS a\nWHERE a.\"ClusterId\" = @__clusterId_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET0I:00000001","RequestPath":"/api/Alerts/cluster/7","ConnectionId":"0HNESID0JET0I","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:08:05.5194040Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"01884eb42fdf7c10621b3d20a1867179","@sp":"e396d71452b22f86","elapsed":"2","parameters":"@__clusterId_0='?' (DbType = Int32), @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"Id\", a.\"ClusterId\", a.\"Severity\", a.\"Message\", a.\"Timestamp\", a.\"IsResolved\", a.\"ResolvedAt\"\nFROM \"Alerts\" AS a\nWHERE a.\"ClusterId\" = @__clusterId_0\nORDER BY a.\"Timestamp\" DESC\nLIMIT @__p_2 OFFSET @__p_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET0I:00000001","RequestPath":"/api/Alerts/cluster/7","ConnectionId":"0HNESID0JET0I","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:08:05.5410950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["113.1568"],"@tr":"01884eb42fdf7c10621b3d20a1867179","@sp":"e396d71452b22f86","RequestMethod":"GET","RequestPath":"/api/Alerts/cluster/7","StatusCode":200,"Elapsed":113.15675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET0I:00000001","ConnectionId":"0HNESID0JET0I","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:08:15.2532240Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"7d42c16da4b339a2ff8890245764139e","@sp":"e5da1b5417919a2e","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT r.\"Id\", CASE r.\"Type\"\n    WHEN 0 THEN 'Cost'\n    WHEN 1 THEN 'Stability'\n    ELSE r.\"Type\"::text\nEND, r.\"Message\", r.\"Severity\", r.\"TargetResource\", r.\"GeneratedAt\"\nFROM \"Recommendations\" AS r\nORDER BY r.\"GeneratedAt\" DESC","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"e453ca58-4446-4b38-9ba6-fb6ea189138d","ActionName":"K8Intel.Controllers.InsightsController.GetRecommendations (K8intel)","RequestId":"0HNESID0JET0K:00000001","RequestPath":"/api/insights/recommendations","ConnectionId":"0HNESID0JET0K","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:08:15.2542350Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["66.7982"],"@tr":"7d42c16da4b339a2ff8890245764139e","@sp":"e5da1b5417919a2e","RequestMethod":"GET","RequestPath":"/api/insights/recommendations","StatusCode":200,"Elapsed":66.798208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"e453ca58-4446-4b38-9ba6-fb6ea189138d","ActionName":"K8Intel.Controllers.InsightsController.GetRecommendations (K8intel)","RequestId":"0HNESID0JET0K:00000001","ConnectionId":"0HNESID0JET0K","MachineName":"Mac","ThreadId":50}
{"@t":"2025-08-16T07:08:23.8014290Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"48ac160136ac3d0f8c81a51438a422fb","@sp":"c7a177a5c0af6125","elapsed":"21","parameters":"@__clusterId_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT n.\"Id\", n.\"ClusterId\", n.\"Name\", n.\"Status\", n.\"KubeletVersion\", n.\"OsImage\"\nFROM \"Nodes\" AS n\nWHERE n.\"ClusterId\" = @__clusterId_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"cb8d071d-f013-4659-ab47-d646232b6b47","ActionName":"KubernetesController.GetNodes (K8intel)","RequestId":"0HNESID0JET0M:00000001","RequestPath":"/api/k8s/clusters/7/nodes","ConnectionId":"0HNESID0JET0M","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:08:23.8054970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["60.8129"],"@tr":"48ac160136ac3d0f8c81a51438a422fb","@sp":"c7a177a5c0af6125","RequestMethod":"GET","RequestPath":"/api/k8s/clusters/7/nodes","StatusCode":200,"Elapsed":60.812875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"cb8d071d-f013-4659-ab47-d646232b6b47","ActionName":"KubernetesController.GetNodes (K8intel)","RequestId":"0HNESID0JET0M:00000001","ConnectionId":"0HNESID0JET0M","MachineName":"Mac","ThreadId":51}
{"@t":"2025-08-16T07:09:27.5035510Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"a30ddb5d35c6607056ce32747e49285c","@sp":"89fc74b7e03f9596","elapsed":"6","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0O:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESID0JET0O","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T07:09:27.5076720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["45.5681"],"@tr":"a30ddb5d35c6607056ce32747e49285c","@sp":"89fc74b7e03f9596","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":401,"Elapsed":45.568125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0O:00000001","ConnectionId":"0HNESID0JET0O","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T07:09:31.5915620Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"480f8fb06642b6be46b9bcab8646ccb3","@sp":"295cfe4e4ee36b34","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0Q:00000001","RequestPath":"/api/Auth/login","ConnectionId":"0HNESID0JET0Q","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T07:09:31.6077440Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["19.2255"],"@tr":"480f8fb06642b6be46b9bcab8646ccb3","@sp":"295cfe4e4ee36b34","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":19.2255,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"6e28b03c-ce7c-4300-99d9-57ad48868c11","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESID0JET0Q:00000001","ConnectionId":"0HNESID0JET0Q","MachineName":"Mac","ThreadId":53}
{"@t":"2025-08-16T07:09:58.8938960Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"5c2c83ae944b17db6a480e9f773f5e8e","@sp":"c1a0bd9713cc3d29","elapsed":"19","parameters":"@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO \"Alerts\" (\"ClusterId\", \"IsResolved\", \"Message\", \"ResolvedAt\", \"Severity\", \"Timestamp\")\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\nRETURNING \"Id\";","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"73a0e5e0-b2c4-499e-8509-4abe2d01c83a","ActionName":"K8Intel.Controllers.AlertsController.CreateAlert (K8intel)","RequestId":"0HNESID0JET0S:00000001","RequestPath":"/api/Alerts","ConnectionId":"0HNESID0JET0S","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T07:09:58.9013250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["62.5123"],"@tr":"5c2c83ae944b17db6a480e9f773f5e8e","@sp":"c1a0bd9713cc3d29","RequestMethod":"POST","RequestPath":"/api/Alerts","StatusCode":201,"Elapsed":62.51225,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"73a0e5e0-b2c4-499e-8509-4abe2d01c83a","ActionName":"K8Intel.Controllers.AlertsController.CreateAlert (K8intel)","RequestId":"0HNESID0JET0S:00000001","ConnectionId":"0HNESID0JET0S","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T07:11:11.1567250Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"ce54c8058f5f73ffa76b10b5c6f600c9","@sp":"f4e2264c44f8bf5a","elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Clusters\" AS c","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T07:11:11.1614460Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"ce54c8058f5f73ffa76b10b5c6f600c9","@sp":"f4e2264c44f8bf5a","elapsed":"3","parameters":"@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND AS \"HealthStatus\"\nFROM \"Clusters\" AS c\nORDER BY c.\"Name\"\nLIMIT @__p_1 OFFSET @__p_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000001","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T07:11:11.1628260Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["22.8753"],"@tr":"ce54c8058f5f73ffa76b10b5c6f600c9","@sp":"f4e2264c44f8bf5a","RequestMethod":"GET","RequestPath":"/api/Clusters","StatusCode":200,"Elapsed":22.875292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000001","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":56}
{"@t":"2025-08-16T07:11:23.1102000Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2ffb5b4bc075a3959ac176d31a8372b1","@sp":"1634b4e0fbc0fbba","elapsed":"1","parameters":"@__clusterId_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Alerts\" AS a\nWHERE a.\"ClusterId\" = @__clusterId_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET10:00000013","RequestPath":"/api/Alerts/cluster/7","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:11:23.1122420Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2ffb5b4bc075a3959ac176d31a8372b1","@sp":"1634b4e0fbc0fbba","elapsed":"1","parameters":"@__clusterId_0='?' (DbType = Int32), @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"Id\", a.\"ClusterId\", a.\"Severity\", a.\"Message\", a.\"Timestamp\", a.\"IsResolved\", a.\"ResolvedAt\"\nFROM \"Alerts\" AS a\nWHERE a.\"ClusterId\" = @__clusterId_0\nORDER BY a.\"Timestamp\" DESC\nLIMIT @__p_2 OFFSET @__p_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET10:00000013","RequestPath":"/api/Alerts/cluster/7","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:11:23.1150250Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["13.8843"],"@tr":"2ffb5b4bc075a3959ac176d31a8372b1","@sp":"1634b4e0fbc0fbba","RequestMethod":"GET","RequestPath":"/api/Alerts/cluster/7","StatusCode":200,"Elapsed":13.88425,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"222ced93-0310-46a9-84de-5f6d13211553","ActionName":"K8Intel.Controllers.AlertsController.GetAlertsForCluster (K8intel)","RequestId":"0HNESID0JET10:00000013","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:11:34.9211890Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"040c32b2b6312bd3e49cec8d2ee50e7a","@sp":"53319743e6b2e389","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Clusters\" AS c","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:11:34.9230750Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"040c32b2b6312bd3e49cec8d2ee50e7a","@sp":"53319743e6b2e389","elapsed":"0","parameters":"@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND AS \"HealthStatus\"\nFROM \"Clusters\" AS c\nORDER BY c.\"Name\"\nLIMIT @__p_1 OFFSET @__p_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000015","RequestPath":"/api/Clusters","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:11:34.9236870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.6811"],"@tr":"040c32b2b6312bd3e49cec8d2ee50e7a","@sp":"53319743e6b2e389","RequestMethod":"GET","RequestPath":"/api/Clusters","StatusCode":200,"Elapsed":5.681125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"c69f1678-f24a-49df-95ab-4ad0de968a5d","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESID0JET10:00000015","ConnectionId":"0HNESID0JET10","MachineName":"Mac","ThreadId":54}
{"@t":"2025-08-16T07:14:16.1728900Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 caught stopping signal..."],"State":"Server mac:16011:c3acb761 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T07:14:16.1740080Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":69}
{"@t":"2025-08-16T07:14:16.1755590Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 All dispatchers stopped"],"State":"Server mac:16011:c3acb761 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:14:16.1794140Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 successfully reported itself as stopped in 2.7136 ms"],"State":"Server mac:16011:c3acb761 successfully reported itself as stopped in 2.7136 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:14:16.1795920Z","@mt":"{State:l}","@r":["Server mac:16011:c3acb761 has been stopped in total 6.4015 ms"],"State":"Server mac:16011:c3acb761 has been stopped in total 6.4015 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:21:06.0678510Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"19","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END\nFROM pg_class AS cls\nJOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\nWHERE\n        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND\n        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND\n        -- Exclude tables which are members of PG extensions\n        NOT EXISTS (\n            SELECT 1 FROM pg_depend WHERE\n                classid=(\n                    SELECT cls.oid\n                    FROM pg_class AS cls\n                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace\n                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'\n                ) AND\n                objid=cls.oid AND\n                deptype IN ('e', 'x')\n        )","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.1676500Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT EXISTS (\n    SELECT 1\n    FROM \"Users\" AS u)","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.1699480Z","@mt":"Database already has users. Skipping default user seed.","SourceContext":"Program","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.2014670Z","@mt":"{State:l}","@r":["Start installing Hangfire SQL objects..."],"State":"Start installing Hangfire SQL objects...","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.2066150Z","@mt":"{State:l}","@r":["Hangfire SQL objects installed."],"State":"Hangfire SQL objects installed.","SourceContext":"Hangfire.PostgreSql.PostgreSqlStorage","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3712440Z","@mt":"The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert","@l":"Warning","EventId":{"Id":8,"Name":"DeveloperCertificateNotTrusted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3755640Z","@mt":"Now listening on: {address}","address":"https://localhost:7001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3756360Z","@mt":"Now listening on: {address}","address":"http://localhost:5001","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3768710Z","@mt":"{State:l}","@r":["Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'"],"State":"Starting Hangfire Server using job storage: 'PostgreSQL Server: Host: localhost, DB: K8IntelDb1, Schema: hangfire'","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3769630Z","@mt":"{State:l}","@r":["Using the following options for PostgreSQL job storage:"],"State":"Using the following options for PostgreSQL job storage:","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3770360Z","@mt":"{State:l}","@r":["    Queue poll interval: 00:00:15."],"State":"    Queue poll interval: 00:00:15.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3770670Z","@mt":"{State:l}","@r":["    Invisibility timeout: 00:30:00."],"State":"    Invisibility timeout: 00:30:00.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3770930Z","@mt":"{State:l}","@r":["    Use sliding invisibility timeout: False."],"State":"    Use sliding invisibility timeout: False.","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3771340Z","@mt":"{State:l}","@r":["Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"],"State":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","SourceContext":"Hangfire.BackgroundJobServer","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3797790Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3798280Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3798860Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"/Users/neerajmac/Documents/Project/K8intel","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":6}
{"@t":"2025-08-16T07:21:06.3870160Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 successfully announced in 5.7499 ms"],"State":"Server mac:16783:5d7e1996 successfully announced in 5.7499 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:21:06.3880600Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."],"State":"Server mac:16783:5d7e1996 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:21:06.3898980Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 all the dispatchers started"],"State":"Server mac:16783:5d7e1996 all the dispatchers started","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:21:06.4825960Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"@__timeWindow_0='?' (DbType = DateTime), @__frequencyThreshold_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT a.\"ClusterId\", a.\"Message\", count(*)::int AS \"Count\"\nFROM \"Alerts\" AS a\nWHERE a.\"Timestamp\" >= @__timeWindow_0 AND NOT (a.\"IsResolved\")\nGROUP BY a.\"ClusterId\", a.\"Message\"\nHAVING count(*)::int >= @__frequencyThreshold_1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T07:22:34.6537870Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"6e0c3fa8cf9597bdd9628894ac3f6b3c","@sp":"153514a4a51fbe8b","elapsed":"1","parameters":"@__loginDto_Username_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT u.\"Id\", u.\"PasswordHash\", u.\"Role\", u.\"Username\"\nFROM \"Users\" AS u\nWHERE u.\"Username\" = @__loginDto_Username_0\nLIMIT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bdf3b3a6-d5ea-469e-ab6c-13604ef7a5e7","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESILSQQPHQ:00000029","RequestPath":"/api/Auth/login","ConnectionId":"0HNESILSQQPHQ","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T07:22:34.6895060Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["118.6294"],"@tr":"6e0c3fa8cf9597bdd9628894ac3f6b3c","@sp":"153514a4a51fbe8b","RequestMethod":"POST","RequestPath":"/api/Auth/login","StatusCode":200,"Elapsed":118.629417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"bdf3b3a6-d5ea-469e-ab6c-13604ef7a5e7","ActionName":"K8Intel.Controllers.AuthController.Login (K8intel)","RequestId":"0HNESILSQQPHQ:00000029","ConnectionId":"0HNESILSQQPHQ","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T07:22:48.2141400Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"495e629ff29d6c48e85ad82f6d5270cd","@sp":"f38960c9e954b6fc","elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT count(*)::int\nFROM \"Clusters\" AS c","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"90d79f2a-f8c6-436b-a4d6-07b6008cf4b5","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESILSQQPHQ:0000002B","RequestPath":"/api/Clusters","ConnectionId":"0HNESILSQQPHQ","MachineName":"Mac","ThreadId":11}
{"@t":"2025-08-16T07:22:48.2495150Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"495e629ff29d6c48e85ad82f6d5270cd","@sp":"f38960c9e954b6fc","elapsed":"14","parameters":"@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT c.\"Id\", c.\"Name\", c.\"ApiEndpoint\", CASE\n    WHEN c.\"LastAgentContactAt\" IS NULL THEN 'Unknown'\n    WHEN c.\"LastAgentContactAt\" < now() + INTERVAL '-10 mins' THEN 'Offline'\n    ELSE 'Healthy'\nEND AS \"HealthStatus\"\nFROM \"Clusters\" AS c\nORDER BY c.\"Name\"\nLIMIT @__p_1 OFFSET @__p_0","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"90d79f2a-f8c6-436b-a4d6-07b6008cf4b5","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESILSQQPHQ:0000002B","RequestPath":"/api/Clusters","ConnectionId":"0HNESILSQQPHQ","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T07:22:48.2586850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["107.3910"],"@tr":"495e629ff29d6c48e85ad82f6d5270cd","@sp":"f38960c9e954b6fc","RequestMethod":"GET","RequestPath":"/api/Clusters","StatusCode":200,"Elapsed":107.391,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","ActionId":"90d79f2a-f8c6-436b-a4d6-07b6008cf4b5","ActionName":"K8Intel.Controllers.ClustersController.GetClusters (K8intel)","RequestId":"0HNESILSQQPHQ:0000002B","ConnectionId":"0HNESILSQQPHQ","MachineName":"Mac","ThreadId":47}
{"@t":"2025-08-16T07:23:23.5999310Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 caught stopping signal..."],"State":"Server mac:16783:5d7e1996 caught stopping signal...","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T07:23:23.6012300Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime","MachineName":"Mac","ThreadId":49}
{"@t":"2025-08-16T07:23:23.6035820Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 All dispatchers stopped"],"State":"Server mac:16783:5d7e1996 All dispatchers stopped","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:23:23.6137360Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 successfully reported itself as stopped in 8.4622 ms"],"State":"Server mac:16783:5d7e1996 successfully reported itself as stopped in 8.4622 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
{"@t":"2025-08-16T07:23:23.6138600Z","@mt":"{State:l}","@r":["Server mac:16783:5d7e1996 has been stopped in total 12.9378 ms"],"State":"Server mac:16783:5d7e1996 has been stopped in total 12.9378 ms","SourceContext":"Hangfire.Server.BackgroundServerProcess","MachineName":"Mac","ThreadId":15}
